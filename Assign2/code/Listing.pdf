%PDF-1.4
5 0 obj
<</Length 6 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-266.081 -2.7 Td
(commands.h)Tj
-121.125 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: commands.h,v 1.11 2016-01-14 14:45:21-08 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#ifndef __COMMANDS_H__)]TJ
T*[(4:)-600(#define __COMMANDS_H__)]TJ
(5:)'
T*[(6:)-600(#include <unordered_map>)]TJ
T*[(7:)-600(using namespace std;)]TJ
(8:)'
T*[(9:)-600(#include "file_sys.h")]TJ
-6.6 -12 Td
[(10:)-600(#include "util.h")]TJ
(11:)'
T*[(12:)-600(// A couple of convenient usings to avoid verbosity.)]TJ
(13:)'
T*[(14:)-600(using command_fn = void \(*\)\(inode_state& state, const wordvec& words\);)]TJ
T*[(15:)-600(using command_hash = unordered_map<string,command_fn>;)]TJ
(16:)'
T*[(17:)-600(// command_error -)]TJ
T*[(18:)-600(//    Extend runtime_error for throwing exceptions related to this )]TJ
T*[(19:)-600(//    program.)]TJ
(20:)'
T*[(21:)-600(class command_error: public runtime_error {)]TJ
T*[(22:)-600(   public: )]TJ
T*[(23:)-600(      explicit command_error \(const string& what\);)]TJ
T*[(24:)-600(};)]TJ
(25:)'
T*[(26:)-600(// execution functions -)]TJ
(27:)'
T*[(28:)-600(void fn_cat    \(inode_state& state, const wordvec& words\);)]TJ
T*[(29:)-600(void fn_cd     \(inode_state& state, const wordvec& words\);)]TJ
T*[(30:)-600(void fn_echo   \(inode_state& state, const wordvec& words\);)]TJ
T*[(31:)-600(void fn_exit   \(inode_state& state, const wordvec& words\);)]TJ
T*[(32:)-600(void fn_ls     \(inode_state& state, const wordvec& words\);)]TJ
T*[(33:)-600(void fn_lsr    \(inode_state& state, const wordvec& words\);)]TJ
T*[(34:)-600(void fn_make   \(inode_state& state, const wordvec& words\);)]TJ
T*[(35:)-600(void fn_mkdir  \(inode_state& state, const wordvec& words\);)]TJ
T*[(36:)-600(void fn_prompt \(inode_state& state, const wordvec& words\);)]TJ
T*[(37:)-600(void fn_pwd    \(inode_state& state, const wordvec& words\);)]TJ
T*[(38:)-600(void fn_rm     \(inode_state& state, const wordvec& words\);)]TJ
T*[(39:)-600(void fn_rmr    \(inode_state& state, const wordvec& words\);)]TJ
(40:)'
T*[(41:)-600(command_fn find_command_fn \(const string& command\);)]TJ
(42:)'
T*[(43:)-600(// exit_status_message -)]TJ
T*[(44:)-600(//    Prints an exit message and returns the exit status, as recorded)]TJ
T*[(45:)-600(//    by any of the functions.)]TJ
(46:)'
T*[(47:)-600(int exit_status_message\(\);)]TJ
T*[(48:)-600(class ysh_exit: public exception {};)]TJ
(49:)'
T*[(50:)-600(#endif)]TJ
(51:)'
ET
Q
Q
endstream
endobj
6 0 obj
2883
endobj
19 0 obj
<</Length 20 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-272.689 -2.7 Td
(commands.cpp)Tj
-114.517 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: commands.cpp,v 1.17 2018-01-25 14:02:55-08 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include "commands.h")]TJ
T*[(4:)-600(#include "debug.h")]TJ
(5:)'
T*[(6:)-600(command_hash cmd_hash {)]TJ
T*[(7:)-600(   {"cat"   , fn_cat   },)]TJ
T*[(8:)-600(   {"cd"    , fn_cd    },)]TJ
T*[(9:)-600(   {"echo"  , fn_echo  },)]TJ
-6.6 -12 Td
[(10:)-600(   {"exit"  , fn_exit  },)]TJ
T*[(11:)-600(   {"ls"    , fn_ls    },)]TJ
T*[(12:)-600(   {"lsr"   , fn_lsr   },)]TJ
T*[(13:)-600(   {"make"  , fn_make  },)]TJ
T*[(14:)-600(   {"mkdir" , fn_mkdir },)]TJ
T*[(15:)-600(   {"prompt", fn_prompt},)]TJ
T*[(16:)-600(   {"pwd"   , fn_pwd   },)]TJ
T*[(17:)-600(   {"rm"    , fn_rm    },)]TJ
T*[(18:)-600(};)]TJ
(19:)'
T*[(20:)-600(command_fn find_command_fn \(const string& cmd\) {)]TJ
T*[(21:)-600(   // Note: value_type is pair<const key_type, mapped_type>)]TJ
T*[(22:)-600(   // So: iterator->first is key_type \(string\))]TJ
T*[(23:)-600(   // So: iterator->second is mapped_type \(command_fn\))]TJ
T*[(24:)-600(   DEBUGF \('c', "[" << cmd << "]"\);)]TJ
T*[(25:)-600(   const auto result = cmd_hash.find \(cmd\);)]TJ
T*[(26:)-600(   if \(result == cmd_hash.end\(\)\) {)]TJ
T*[(27:)-600(      throw command_error \(cmd + ": no such function"\);)]TJ
T*[(28:)-600(   })]TJ
T*[(29:)-600(   return result->second;)]TJ
T*[(30:)-600(})]TJ
(31:)'
T*[(32:)-600(command_error::command_error \(const string& what\):)]TJ
T*[(33:)-600(            runtime_error \(what\) {)]TJ
T*[(34:)-600(})]TJ
(35:)'
T*[(36:)-600(int exit_status_message\(\) {)]TJ
T*[(37:)-600(   int exit_status = exit_status::get\(\);)]TJ
T*[(38:)-600(   cout << execname\(\) << ": exit\(" << exit_status << "\)" << endl;)]TJ
T*[(39:)-600(   return exit_status;)]TJ
T*[(40:)-600(})]TJ
(41:)'
T*[(42:)-600(void fn_cat \(inode_state& state, const wordvec& words\){)]TJ
T*[(43:)-600(   DEBUGF \('c', state\);)]TJ
T*[(44:)-600(   DEBUGF \('c', words\);)]TJ
T*[(45:)-600(})]TJ
(46:)'
T*[(47:)-600(void fn_cd \(inode_state& state, const wordvec& words\){)]TJ
T*[(48:)-600(   DEBUGF \('c', state\);)]TJ
T*[(49:)-600(   DEBUGF \('c', words\);)]TJ
T*[(50:)-600(})]TJ
(51:)'
T*[(52:)-600(void fn_echo \(inode_state& state, const wordvec& words\){)]TJ
T*[(53:)-600(   DEBUGF \('c', state\);)]TJ
T*[(54:)-600(   DEBUGF \('c', words\);)]TJ
T*[(55:)-600(   cout << word_range \(words.cbegin\(\) + 1, words.cend\(\)\) << endl;)]TJ
T*[(56:)-600(})]TJ
(57:)'
ET
Q
Q
endstream
endobj
20 0 obj
2953
endobj
24 0 obj
<</Length 25 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-272.689 -2.7 Td
(commands.cpp)Tj
-114.517 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(58:)Tj
12 TL
T*[(59:)-600(void fn_exit \(inode_state& state, const wordvec& words\){)]TJ
T*[(60:)-600(   DEBUGF \('c', state\);)]TJ
T*[(61:)-600(   DEBUGF \('c', words\);)]TJ
T*[(62:)-600(   throw ysh_exit\(\);)]TJ
T*[(63:)-600(})]TJ
(64:)'
T*[(65:)-600(void fn_ls \(inode_state& state, const wordvec& words\){)]TJ
T*[(66:)-600(   DEBUGF \('c', state\);)]TJ
T*[(67:)-600(   DEBUGF \('c', words\);)]TJ
T*[(68:)-600(})]TJ
(69:)'
T*[(70:)-600(void fn_lsr \(inode_state& state, const wordvec& words\){)]TJ
T*[(71:)-600(   DEBUGF \('c', state\);)]TJ
T*[(72:)-600(   DEBUGF \('c', words\);)]TJ
T*[(73:)-600(})]TJ
(74:)'
T*[(75:)-600(void fn_make \(inode_state& state, const wordvec& words\){)]TJ
T*[(76:)-600(   DEBUGF \('c', state\);)]TJ
T*[(77:)-600(   DEBUGF \('c', words\);)]TJ
T*[(78:)-600(})]TJ
(79:)'
T*[(80:)-600(void fn_mkdir \(inode_state& state, const wordvec& words\){)]TJ
T*[(81:)-600(   DEBUGF \('c', state\);)]TJ
T*[(82:)-600(   DEBUGF \('c', words\);)]TJ
T*[(83:)-600(})]TJ
(84:)'
T*[(85:)-600(void fn_prompt \(inode_state& state, const wordvec& words\){)]TJ
T*[(86:)-600(   DEBUGF \('c', state\);)]TJ
T*[(87:)-600(   DEBUGF \('c', words\);)]TJ
T*[(88:)-600(})]TJ
(89:)'
T*[(90:)-600(void fn_pwd \(inode_state& state, const wordvec& words\){)]TJ
T*[(91:)-600(   DEBUGF \('c', state\);)]TJ
T*[(92:)-600(   DEBUGF \('c', words\);)]TJ
T*[(93:)-600(})]TJ
(94:)'
T*[(95:)-600(void fn_rm \(inode_state& state, const wordvec& words\){)]TJ
T*[(96:)-600(   DEBUGF \('c', state\);)]TJ
T*[(97:)-600(   DEBUGF \('c', words\);)]TJ
T*[(98:)-600(})]TJ
(99:)'
-6.6 -12 Td
[(100:)-600(void fn_rmr \(inode_state& state, const wordvec& words\){)]TJ
T*[(101:)-600(   DEBUGF \('c', state\);)]TJ
T*[(102:)-600(   DEBUGF \('c', words\);)]TJ
T*[(103:)-600(})]TJ
(104:)'
ET
Q
Q
endstream
endobj
25 0 obj
2316
endobj
29 0 obj
<</Length 30 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-252.859 -2.7 Td
(debug.h)Tj
-134.347 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: debug.h,v 1.10 2018-01-25 14:02:55-08 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#ifndef __DEBUG_H__)]TJ
T*[(4:)-600(#define __DEBUG_H__)]TJ
(5:)'
T*[(6:)-600(#include <bitset>)]TJ
T*[(7:)-600(#include <climits>)]TJ
T*[(8:)-600(#include <string>)]TJ
T*[(9:)-600(using namespace std;)]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(// debug -)]TJ
T*[(12:)-600(//    static class for maintaining global debug flags, each indicated)]TJ
T*[(13:)-600(//    by a single character.)]TJ
T*[(14:)-600(// setflags -)]TJ
T*[(15:)-600(//    Takes a string argument, and sets a flag for each char in the)]TJ
T*[(16:)-600(//    string.  As a special case, '@', sets all flags.)]TJ
T*[(17:)-600(// getflag -)]TJ
T*[(18:)-600(//    Used by the DEBUGF macro to check to see if a flag has been set.)]TJ
T*[(19:)-600(//    Not to be called by user code.)]TJ
(20:)'
T*[(21:)-600(class debugflags {)]TJ
T*[(22:)-600(   private:)]TJ
T*[(23:)-600(      using flagset = bitset<UCHAR_MAX + 1>;)]TJ
T*[(24:)-600(      static flagset flags;)]TJ
T*[(25:)-600(   public:)]TJ
T*[(26:)-600(      static void setflags \(const string& optflags\);)]TJ
T*[(27:)-600(      static bool getflag \(char flag\);)]TJ
T*[(28:)-600(      static void where \(char flag, const char* file, int line,)]TJ
T*[(29:)-600(                         const char* pretty_function\);)]TJ
T*[(30:)-600(};)]TJ
(31:)'
ET
Q
Q
endstream
endobj
30 0 obj
1910
endobj
34 0 obj
<</Length 35 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-252.859 -2.7 Td
(debug.h)Tj
-134.347 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(32:)Tj
12 TL
T*[(33:)-600(// DEBUGF -)]TJ
T*[(34:)-600(//    Macro which expands into trace code.  First argument is a)]TJ
T*[(35:)-600(//    trace flag char, second argument is output code that can)]TJ
T*[(36:)-600(//    be sandwiched between <<.  Beware of operator precedence.)]TJ
T*[(37:)-600(//    Example:)]TJ
T*[(38:)-600(//       DEBUGF \('u', "foo = " << foo\);)]TJ
T*[(39:)-600(//    will print two words and a newline if flag 'u' is  on.)]TJ
T*[(40:)-600(//    Traces are preceded by filename, line number, and function.)]TJ
(41:)'
T*[(42:)-600(#ifdef NDEBUG)]TJ
T*[(43:)-600(#define DEBUGF\(FLAG,CODE\) ;)]TJ
T*[(44:)-600(#define DEBUGS\(FLAG,STMT\) ;)]TJ
T*[(45:)-600(#else)]TJ
T*[(46:)-600(#define DEBUGF\(FLAG,CODE\) { \\)]TJ
T*[(47:)-600(           if \(debugflags::getflag \(FLAG\)\) { \\)]TJ
T*[(48:)-600(              debugflags::where \(FLAG, __FILE__, __LINE__, \\)]TJ
T*[(49:)-600(                                 __PRETTY_FUNCTION__\); \\)]TJ
T*[(50:)-600(              cerr << CODE << endl; \\)]TJ
T*[(51:)-600(           } \\)]TJ
T*[(52:)-600(        })]TJ
T*[(53:)-600(#define DEBUGS\(FLAG,STMT\) { \\)]TJ
T*[(54:)-600(           if \(debugflags::getflag \(FLAG\)\) { \\)]TJ
T*[(55:)-600(              debugflags::where \(FLAG, __FILE__, __LINE__, \\)]TJ
T*[(56:)-600(                                 __PRETTY_FUNCTION__\); \\)]TJ
T*[(57:)-600(              STMT; \\)]TJ
T*[(58:)-600(           } \\)]TJ
T*[(59:)-600(        })]TJ
T*[(60:)-600(#endif)]TJ
(61:)'
T*[(62:)-600(#endif)]TJ
(63:)'
ET
Q
Q
endstream
endobj
35 0 obj
2074
endobj
39 0 obj
<</Length 40 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-259.466 -2.7 Td
(debug.cpp)Tj
-127.739 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: debug.cpp,v 1.12 2018-06-27 14:44:57-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <climits>)]TJ
T*[(4:)-600(#include <iostream>)]TJ
T*[(5:)-600(#include <vector>)]TJ
(6:)'
T*[(7:)-600(using namespace std;)]TJ
(8:)'
T*[(9:)-600(#include "debug.h")]TJ
-6.6 -12 Td
[(10:)-600(#include "util.h")]TJ
(11:)'
T*[(12:)-600(debugflags::flagset debugflags::flags {};)]TJ
(13:)'
T*[(14:)-600(void debugflags::setflags \(const string& initflags\) {)]TJ
T*[(15:)-600(   for \(const unsigned char flag: initflags\) {)]TJ
T*[(16:)-600(      if \(flag == '@'\) flags.set\(\);)]TJ
T*[(17:)-600(                  else flags.set \(flag, true\);)]TJ
T*[(18:)-600(   })]TJ
T*[(19:)-600(})]TJ
(20:)'
T*[(21:)-600(// getflag -)]TJ
T*[(22:)-600(//    Check to see if a certain flag is on.)]TJ
(23:)'
T*[(24:)-600(bool debugflags::getflag \(char flag\) {)]TJ
T*[(25:)-600(   // WARNING: Don't TRACE this function or the stack will blow up.)]TJ
T*[(26:)-600(   return flags.test \(static_cast<unsigned char> \(flag\)\);)]TJ
T*[(27:)-600(})]TJ
(28:)'
T*[(29:)-600(void debugflags::where \(char flag, const char* file, int line,)]TJ
T*[(30:)-600(                        const char* pretty_function\) {)]TJ
T*[(31:)-600(   cout << execname\(\) << ": DEBUG\(" << flag << "\) ")]TJ
T*[(32:)-600(        << file << "[" << line << "] " << endl)]TJ
T*[(33:)-600(        << "   " << pretty_function << endl;)]TJ
T*[(34:)-600(})]TJ
(35:)'
ET
Q
Q
endstream
endobj
40 0 obj
1978
endobj
44 0 obj
<</Length 45 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/4)Tj
/R12 14 Tf
-257.527 -2.7 Td
(file_sys.h)Tj
-129.679 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: file_sys.h,v 1.6 2018-06-27 14:44:57-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#ifndef __INODE_H__)]TJ
T*[(4:)-600(#define __INODE_H__)]TJ
(5:)'
T*[(6:)-600(#include <exception>)]TJ
T*[(7:)-600(#include <iostream>)]TJ
T*[(8:)-600(#include <memory>)]TJ
T*[(9:)-600(#include <map>)]TJ
-6.6 -12 Td
[(10:)-600(#include <vector>)]TJ
T*[(11:)-600(using namespace std;)]TJ
(12:)'
T*[(13:)-600(#include "util.h")]TJ
(14:)'
T*[(15:)-600(// inode_t -)]TJ
T*[(16:)-600(//    An inode is either a directory or a plain file.)]TJ
(17:)'
T*[(18:)-600(enum class file_type {PLAIN_TYPE, DIRECTORY_TYPE};)]TJ
T*[(19:)-600(class inode;)]TJ
T*[(20:)-600(class base_file;)]TJ
T*[(21:)-600(class plain_file;)]TJ
T*[(22:)-600(class directory;)]TJ
T*[(23:)-600(using inode_ptr = shared_ptr<inode>;)]TJ
T*[(24:)-600(using base_file_ptr = shared_ptr<base_file>;)]TJ
T*[(25:)-600(ostream& operator<< \(ostream&, file_type\);)]TJ
(26:)'
ET
Q
Q
endstream
endobj
45 0 obj
1479
endobj
49 0 obj
<</Length 50 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/4)Tj
/R12 14 Tf
-257.527 -2.7 Td
(file_sys.h)Tj
-129.679 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(27:)Tj
12 TL
T*[(28:)-600(// inode_state -)]TJ
T*[(29:)-600(//    A small convenient class to maintain the state of the simulated)]TJ
T*[(30:)-600(//    process:  the root \(/\), the current directory \(.\), and the)]TJ
T*[(31:)-600(//    prompt.)]TJ
(32:)'
T*[(33:)-600(class inode_state {)]TJ
T*[(34:)-600(   friend class inode;)]TJ
T*[(35:)-600(   friend ostream& operator<< \(ostream& out, const inode_state&\);)]TJ
T*[(36:)-600(   private:)]TJ
T*[(37:)-600(      inode_ptr root {nullptr};)]TJ
T*[(38:)-600(      inode_ptr cwd {nullptr};)]TJ
T*[(39:)-600(      string prompt_ {"% "};)]TJ
T*[(40:)-600(   public:)]TJ
T*[(41:)-600(      inode_state \(const inode_state&\) = delete; // copy ctor)]TJ
T*[(42:)-600(      inode_state& operator= \(const inode_state&\) = delete; // op=)]TJ
T*[(43:)-600(      inode_state\(\);)]TJ
T*[(44:)-600(      const string& prompt\(\) const;)]TJ
T*[(45:)-600(};)]TJ
(46:)'
T*[(47:)-600(// class inode -)]TJ
T*[(48:)-600(// inode ctor -)]TJ
T*[(49:)-600(//    Create a new inode of the given type.)]TJ
T*[(50:)-600(// get_inode_nr -)]TJ
T*[(51:)-600(//    Retrieves the serial number of the inode.  Inode numbers are)]TJ
T*[(52:)-600(//    allocated in sequence by small integer.)]TJ
T*[(53:)-600(// size -)]TJ
T*[(54:)-600(//    Returns the size of an inode.  For a directory, this is the)]TJ
T*[(55:)-600(//    number of dirents.  For a text file, the number of characters)]TJ
T*[(56:)-600(//    when printed \(the sum of the lengths of each word, plus the)]TJ
T*[(57:)-600(//    number of words.)]TJ
T*[(58:)-600(//    )]TJ
(59:)'
T*[(60:)-600(class inode {)]TJ
T*[(61:)-600(   friend class inode_state;)]TJ
T*[(62:)-600(   private:)]TJ
T*[(63:)-600(      static int next_inode_nr;)]TJ
T*[(64:)-600(      int inode_nr;)]TJ
T*[(65:)-600(      base_file_ptr contents;)]TJ
T*[(66:)-600(   public:)]TJ
T*[(67:)-600(      inode \(file_type\);)]TJ
T*[(68:)-600(      int get_inode_nr\(\) const;)]TJ
T*[(69:)-600(};)]TJ
(70:)'
ET
Q
Q
endstream
endobj
50 0 obj
2516
endobj
54 0 obj
<</Length 55 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(3)Tj
/R10 18 Tf
16.0129 0 Td
(/4)Tj
/R12 14 Tf
-257.527 -2.7 Td
(file_sys.h)Tj
-129.679 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(71:)Tj
12 TL
T*[(72:)-600(// class base_file -)]TJ
T*[(73:)-600(// Just a base class at which an inode can point.  No data or)]TJ
T*[(74:)-600(// functions.  Makes the synthesized members useable only from)]TJ
T*[(75:)-600(// the derived classes.)]TJ
(76:)'
T*[(77:)-600(class file_error: public runtime_error {)]TJ
T*[(78:)-600(   public:)]TJ
T*[(79:)-600(      explicit file_error \(const string& what\);)]TJ
T*[(80:)-600(};)]TJ
(81:)'
T*[(82:)-600(class base_file {)]TJ
T*[(83:)-600(   protected:)]TJ
T*[(84:)-600(      base_file\(\) = default;)]TJ
T*[(85:)-600(   public:)]TJ
T*[(86:)-600(      virtual ~base_file\(\) = default;)]TJ
T*[(87:)-600(      base_file \(const base_file&\) = delete;)]TJ
T*[(88:)-600(      base_file& operator= \(const base_file&\) = delete;)]TJ
T*[(89:)-600(      virtual size_t size\(\) const = 0;)]TJ
T*[(90:)-600(      virtual const wordvec& readfile\(\) const = 0;)]TJ
T*[(91:)-600(      virtual void writefile \(const wordvec& newdata\) = 0;)]TJ
T*[(92:)-600(      virtual void remove \(const string& filename\) = 0;)]TJ
T*[(93:)-600(      virtual inode_ptr mkdir \(const string& dirname\) = 0;)]TJ
T*[(94:)-600(      virtual inode_ptr mkfile \(const string& filename\) = 0;)]TJ
T*[(95:)-600(};)]TJ
ET
Q
Q
endstream
endobj
55 0 obj
1793
endobj
59 0 obj
<</Length 60 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(4)Tj
/R10 18 Tf
16.0129 0 Td
(/4)Tj
/R12 14 Tf
-257.527 -2.7 Td
(file_sys.h)Tj
-129.679 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(96:)Tj
12 TL
T*[(97:)-600(// class plain_file -)]TJ
T*[(98:)-600(// Used to hold data.)]TJ
T*[(99:)-600(// synthesized default ctor -)]TJ
-6.6 -12 Td
[(100:)-600(//    Default vector<string> is a an empty vector.)]TJ
T*[(101:)-600(// readfile -)]TJ
T*[(102:)-600(//    Returns a copy of the contents of the wordvec in the file.)]TJ
T*[(103:)-600(// writefile -)]TJ
T*[(104:)-600(//    Replaces the contents of a file with new contents.)]TJ
(105:)'
T*[(106:)-600(class plain_file: public base_file {)]TJ
T*[(107:)-600(   private:)]TJ
T*[(108:)-600(      wordvec data;)]TJ
T*[(109:)-600(   public:)]TJ
T*[(110:)-600(      virtual size_t size\(\) const override;)]TJ
T*[(111:)-600(      virtual const wordvec& readfile\(\) const override;)]TJ
T*[(112:)-600(      virtual void writefile \(const wordvec& newdata\) override;)]TJ
T*[(113:)-600(      virtual void remove \(const string& filename\) override;)]TJ
T*[(114:)-600(      virtual inode_ptr mkdir \(const string& dirname\) override;)]TJ
T*[(115:)-600(      virtual inode_ptr mkfile \(const string& filename\) override;)]TJ
T*[(116:)-600(};)]TJ
(117:)'
T*[(118:)-600(// class directory -)]TJ
T*[(119:)-600(// Used to map filenames onto inode pointers.)]TJ
T*[(120:)-600(// default ctor -)]TJ
T*[(121:)-600(//    Creates a new map with keys "." and "..".)]TJ
T*[(122:)-600(// remove -)]TJ
T*[(123:)-600(//    Removes the file or subdirectory from the current inode.)]TJ
T*[(124:)-600(//    Throws an file_error if this is not a directory, the file)]TJ
T*[(125:)-600(//    does not exist, or the subdirectory is not empty.)]TJ
T*[(126:)-600(//    Here empty means the only entries are dot \(.\) and dotdot \(..\).)]TJ
T*[(127:)-600(// mkdir -)]TJ
T*[(128:)-600(//    Creates a new directory under the current directory and )]TJ
T*[(129:)-600(//    immediately adds the directories dot \(.\) and dotdot \(..\) to it.)]TJ
T*[(130:)-600(//    Note that the parent \(..\) of / is / itself.  It is an error)]TJ
T*[(131:)-600(//    if the entry already exists.)]TJ
T*[(132:)-600(// mkfile -)]TJ
T*[(133:)-600(//    Create a new empty text file with the given name.  Error if)]TJ
T*[(134:)-600(//    a dirent with that name exists.)]TJ
(135:)'
T*[(136:)-600(class directory: public base_file {)]TJ
T*[(137:)-600(   private:)]TJ
T*[(138:)-600(      // Must be a map, not unordered_map, so printing is lexicographic)]TJ
T*[(139:)-600(      map<string,inode_ptr> dirents;)]TJ
T*[(140:)-600(   public:)]TJ
T*[(141:)-600(      virtual size_t size\(\) const override;)]TJ
T*[(142:)-600(      virtual const wordvec& readfile\(\) const override;)]TJ
T*[(143:)-600(      virtual void writefile \(const wordvec& newdata\) override;)]TJ
T*[(144:)-600(      virtual void remove \(const string& filename\) override;)]TJ
T*[(145:)-600(      virtual inode_ptr mkdir \(const string& dirname\) override;)]TJ
T*[(146:)-600(      virtual inode_ptr mkfile \(const string& filename\) override;)]TJ
T*[(147:)-600(};)]TJ
(148:)'
T*[(149:)-600(#endif)]TJ
(150:)'
ET
Q
Q
endstream
endobj
60 0 obj
3539
endobj
64 0 obj
<</Length 65 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/3)Tj
/R12 14 Tf
-264.135 -2.7 Td
(file_sys.cpp)Tj
-123.071 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: file_sys.cpp,v 1.6 2018-06-27 14:44:57-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <iostream>)]TJ
T*[(4:)-600(#include <stdexcept>)]TJ
T*[(5:)-600(#include <unordered_map>)]TJ
(6:)'
T*[(7:)-600(using namespace std;)]TJ
(8:)'
T*[(9:)-600(#include "debug.h")]TJ
-6.6 -12 Td
[(10:)-600(#include "file_sys.h")]TJ
(11:)'
T*[(12:)-600(int inode::next_inode_nr {1};)]TJ
(13:)'
T*[(14:)-600(struct file_type_hash {)]TJ
T*[(15:)-600(   size_t operator\(\) \(file_type type\) const {)]TJ
T*[(16:)-600(      return static_cast<size_t> \(type\);)]TJ
T*[(17:)-600(   })]TJ
T*[(18:)-600(};)]TJ
(19:)'
T*[(20:)-600(ostream& operator<< \(ostream& out, file_type type\) {)]TJ
T*[(21:)-600(   static unordered_map<file_type,string,file_type_hash> hash {)]TJ
T*[(22:)-600(      {file_type::PLAIN_TYPE, "PLAIN_TYPE"},)]TJ
T*[(23:)-600(      {file_type::DIRECTORY_TYPE, "DIRECTORY_TYPE"},)]TJ
T*[(24:)-600(   };)]TJ
T*[(25:)-600(   return out << hash[type];)]TJ
T*[(26:)-600(})]TJ
(27:)'
T*[(28:)-600(inode_state::inode_state\(\) {)]TJ
T*[(29:)-600(   DEBUGF \('i', "root = " << root << ", cwd = " << cwd)]TJ
T*[(30:)-600(          << ", prompt = \\"" << prompt\(\) << "\\""\);)]TJ
T*[(31:)-600(})]TJ
(32:)'
T*[(33:)-600(const string& inode_state::prompt\(\) const { return prompt_; })]TJ
(34:)'
T*[(35:)-600(ostream& operator<< \(ostream& out, const inode_state& state\) {)]TJ
T*[(36:)-600(   out << "inode_state: root = " << state.root)]TJ
T*[(37:)-600(       << ", cwd = " << state.cwd;)]TJ
T*[(38:)-600(   return out;)]TJ
T*[(39:)-600(})]TJ
(40:)'
T*[(41:)-600(inode::inode\(file_type type\): inode_nr \(next_inode_nr++\) {)]TJ
T*[(42:)-600(   switch \(type\) {)]TJ
T*[(43:)-600(      case file_type::PLAIN_TYPE:)]TJ
T*[(44:)-600(           contents = make_shared<plain_file>\(\);)]TJ
T*[(45:)-600(           break;)]TJ
T*[(46:)-600(      case file_type::DIRECTORY_TYPE:)]TJ
T*[(47:)-600(           contents = make_shared<directory>\(\);)]TJ
T*[(48:)-600(           break;)]TJ
T*[(49:)-600(   })]TJ
T*[(50:)-600(   DEBUGF \('i', "inode " << inode_nr << ", type = " << type\);)]TJ
T*[(51:)-600(})]TJ
(52:)'
T*[(53:)-600(int inode::get_inode_nr\(\) const {)]TJ
T*[(54:)-600(   DEBUGF \('i', "inode = " << inode_nr\);)]TJ
T*[(55:)-600(   return inode_nr;)]TJ
T*[(56:)-600(})]TJ
(57:)'
ET
Q
Q
endstream
endobj
65 0 obj
2844
endobj
69 0 obj
<</Length 70 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/3)Tj
/R12 14 Tf
-264.135 -2.7 Td
(file_sys.cpp)Tj
-123.071 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(58:)Tj
12 TL
T*[(59:)-600(file_error::file_error \(const string& what\):)]TJ
T*[(60:)-600(            runtime_error \(what\) {)]TJ
T*[(61:)-600(})]TJ
(62:)'
T*[(63:)-600(size_t plain_file::size\(\) const {)]TJ
T*[(64:)-600(   size_t size {0};)]TJ
T*[(65:)-600(   DEBUGF \('i', "size = " << size\);)]TJ
T*[(66:)-600(   return size;)]TJ
T*[(67:)-600(})]TJ
(68:)'
T*[(69:)-600(const wordvec& plain_file::readfile\(\) const {)]TJ
T*[(70:)-600(   DEBUGF \('i', data\);)]TJ
T*[(71:)-600(   return data;)]TJ
T*[(72:)-600(})]TJ
(73:)'
T*[(74:)-600(void plain_file::writefile \(const wordvec& words\) {)]TJ
T*[(75:)-600(   DEBUGF \('i', words\);)]TJ
T*[(76:)-600(})]TJ
(77:)'
T*[(78:)-600(void plain_file::remove \(const string&\) {)]TJ
T*[(79:)-600(   throw file_error \("is a plain file"\);)]TJ
T*[(80:)-600(})]TJ
(81:)'
T*[(82:)-600(inode_ptr plain_file::mkdir \(const string&\) {)]TJ
T*[(83:)-600(   throw file_error \("is a plain file"\);)]TJ
T*[(84:)-600(})]TJ
(85:)'
T*[(86:)-600(inode_ptr plain_file::mkfile \(const string&\) {)]TJ
T*[(87:)-600(   throw file_error \("is a plain file"\);)]TJ
T*[(88:)-600(})]TJ
(89:)'
ET
Q
Q
endstream
endobj
70 0 obj
1677
endobj
74 0 obj
<</Length 75 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(3)Tj
/R10 18 Tf
16.0129 0 Td
(/3)Tj
/R12 14 Tf
-264.135 -2.7 Td
(file_sys.cpp)Tj
-123.071 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(90:)Tj
12 TL
T*[(91:)-600(size_t directory::size\(\) const {)]TJ
T*[(92:)-600(   size_t size {0};)]TJ
T*[(93:)-600(   DEBUGF \('i', "size = " << size\);)]TJ
T*[(94:)-600(   return size;)]TJ
T*[(95:)-600(})]TJ
(96:)'
T*[(97:)-600(const wordvec& directory::readfile\(\) const {)]TJ
T*[(98:)-600(   throw file_error \("is a directory"\);)]TJ
T*[(99:)-600(})]TJ
-6.6 -12 Td
(100:)Tj
T*[(101:)-600(void directory::writefile \(const wordvec&\) {)]TJ
T*[(102:)-600(   throw file_error \("is a directory"\);)]TJ
T*[(103:)-600(})]TJ
(104:)'
T*[(105:)-600(void directory::remove \(const string& filename\) {)]TJ
T*[(106:)-600(   DEBUGF \('i', filename\);)]TJ
T*[(107:)-600(})]TJ
(108:)'
T*[(109:)-600(inode_ptr directory::mkdir \(const string& dirname\) {)]TJ
T*[(110:)-600(   DEBUGF \('i', dirname\);)]TJ
T*[(111:)-600(   return nullptr;)]TJ
T*[(112:)-600(})]TJ
(113:)'
T*[(114:)-600(inode_ptr directory::mkfile \(const string& filename\) {)]TJ
T*[(115:)-600(   DEBUGF \('i', filename\);)]TJ
T*[(116:)-600(   return nullptr;)]TJ
T*[(117:)-600(})]TJ
(118:)'
ET
Q
Q
endstream
endobj
75 0 obj
1608
endobj
79 0 obj
<</Length 80 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-245.088 -2.7 Td
(util.h)Tj
-142.117 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: util.h,v 1.12 2016-01-14 16:16:52-08 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(// util -)]TJ
T*[(4:)-600(//    A utility class to provide various services not conveniently)]TJ
T*[(5:)-600(//    included in other modules.)]TJ
(6:)'
T*[(7:)-600(#ifndef __UTIL_H__)]TJ
T*[(8:)-600(#define __UTIL_H__)]TJ
(9:)'
-6.6 -12 Td
[(10:)-600(#include <iostream>)]TJ
T*[(11:)-600(#include <stdexcept>)]TJ
T*[(12:)-600(#include <string>)]TJ
T*[(13:)-600(#include <vector>)]TJ
T*[(14:)-600(using namespace std;)]TJ
(15:)'
T*[(16:)-600(// Convenient type using to allow brevity of code elsewhere.)]TJ
(17:)'
T*[(18:)-600(template <typename iterator>)]TJ
T*[(19:)-600(using range_type = pair<iterator,iterator>;)]TJ
(20:)'
T*[(21:)-600(using wordvec = vector<string>;)]TJ
T*[(22:)-600(using word_range = range_type<decltype\(declval<wordvec>\(\).cbegin\(\)\)>;)]TJ
(23:)'
T*[(24:)-600(// setexecname -)]TJ
T*[(25:)-600(//    Sets the static string to be used as an execname.)]TJ
T*[(26:)-600(// execname -)]TJ
T*[(27:)-600(//    Returns the basename of the executable image, which is used in)]TJ
T*[(28:)-600(//    printing error messags.)]TJ
(29:)'
T*[(30:)-600(void execname \(const string&\);)]TJ
T*[(31:)-600(string& execname\(\);)]TJ
(32:)'
T*[(33:)-600(// want_echo -)]TJ
T*[(34:)-600(//    We want to echo all of cin to cout if either cin or cout)]TJ
T*[(35:)-600(//    is not a tty.  This helps make batch processing easier by)]TJ
T*[(36:)-600(//    making cout look like a terminal session trace.)]TJ
(37:)'
T*[(38:)-600(bool want_echo\(\);)]TJ
(39:)'
T*[(40:)-600(// exit_status -)]TJ
T*[(41:)-600(//    A static class for maintaining the exit status.  The default)]TJ
T*[(42:)-600(//    status is EXIT_SUCCESS \(0\), but can be set to another value,)]TJ
T*[(43:)-600(//    such as EXIT_FAILURE \(1\) to indicate that error messages have)]TJ
T*[(44:)-600(//    been printed.)]TJ
(45:)'
T*[(46:)-600(class exit_status {)]TJ
T*[(47:)-600(   private:)]TJ
T*[(48:)-600(      static int status;)]TJ
T*[(49:)-600(   public:)]TJ
T*[(50:)-600(      static void set \(int\);)]TJ
T*[(51:)-600(      static int get\(\);)]TJ
T*[(52:)-600(};)]TJ
(53:)'
ET
Q
Q
endstream
endobj
80 0 obj
2696
endobj
84 0 obj
<</Length 85 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-245.088 -2.7 Td
(util.h)Tj
-142.117 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(54:)Tj
12 TL
T*[(55:)-600(// split -)]TJ
T*[(56:)-600(//    Split a string into a wordvec \(as defined above\).  Any sequence)]TJ
T*[(57:)-600(//    of chars in the delimiter string is used as a separator.  To)]TJ
T*[(58:)-600(//    Split a pathname, use "/".  To split a shell command, use " ".)]TJ
(59:)'
T*[(60:)-600(wordvec split \(const string& line, const string& delimiter\);)]TJ
(61:)'
T*[(62:)-600(// complain -)]TJ
T*[(63:)-600(//    Used for starting error messages.  Sets the exit status to)]TJ
T*[(64:)-600(//    EXIT_FAILURE, writes the program name to cerr, and then)]TJ
T*[(65:)-600(//    returns the cerr ostream.  Example:)]TJ
T*[(66:)-600(//       complain\(\) << filename << ": some problem" << endl;)]TJ
(67:)'
T*[(68:)-600(ostream& complain\(\);)]TJ
(69:)'
T*[(70:)-600(// operator<< \(vector\) -)]TJ
T*[(71:)-600(//    An overloaded template operator which allows vectors to be)]TJ
T*[(72:)-600(//    printed out as a single operator, each element separated from)]TJ
T*[(73:)-600(//    the next with spaces.  The item_t must have an output operator)]TJ
T*[(74:)-600(//    defined for it.)]TJ
(75:)'
T*[(76:)-600(template <typename item_t>)]TJ
T*[(77:)-600(ostream& operator<< \(ostream& out, const vector<item_t>& vec\) {)]TJ
T*[(78:)-600(   string space = "";)]TJ
T*[(79:)-600(   for \(const auto& item: vec\) {)]TJ
T*[(80:)-600(      out << space << item;)]TJ
T*[(81:)-600(      space = " ";)]TJ
T*[(82:)-600(   })]TJ
T*[(83:)-600(   return out;)]TJ
T*[(84:)-600(})]TJ
(85:)'
T*[(86:)-600(template <typename iterator>)]TJ
T*[(87:)-600(ostream& operator<< \(ostream& out, range_type<iterator> range\) {)]TJ
T*[(88:)-600(   for \(auto itor = range.first; itor != range.second; ++itor\) {)]TJ
T*[(89:)-600(      if \(itor != range.first\) out << " ";)]TJ
T*[(90:)-600(      out << *itor;)]TJ
T*[(91:)-600(   })]TJ
T*[(92:)-600(   return out;)]TJ
T*[(93:)-600(})]TJ
(94:)'
T*[(95:)-600(#endif)]TJ
(96:)'
ET
Q
Q
endstream
endobj
85 0 obj
2479
endobj
89 0 obj
<</Length 90 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-251.696 -2.7 Td
(util.cpp)Tj
-135.509 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: util.cpp,v 1.11 2016-01-13 16:21:53-08 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <cstdlib>)]TJ
T*[(4:)-600(#include <unistd.h>)]TJ
(5:)'
T*[(6:)-600(using namespace std;)]TJ
(7:)'
T*[(8:)-600(#include "util.h")]TJ
T*[(9:)-600(#include "debug.h")]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(int exit_status::status = EXIT_SUCCESS;)]TJ
T*[(12:)-600(static string execname_string;)]TJ
(13:)'
T*[(14:)-600(void exit_status::set \(int new_status\) {)]TJ
T*[(15:)-600(   status = new_status;)]TJ
T*[(16:)-600(})]TJ
(17:)'
T*[(18:)-600(int exit_status::get\(\) {)]TJ
T*[(19:)-600(   return status;)]TJ
T*[(20:)-600(})]TJ
(21:)'
T*[(22:)-600(void execname \(const string& name\) {)]TJ
T*[(23:)-600(   execname_string =  name.substr \(name.rfind \('/'\) + 1\);)]TJ
T*[(24:)-600(   DEBUGF \('u', execname_string\);)]TJ
T*[(25:)-600(})]TJ
(26:)'
T*[(27:)-600(string& execname\(\) {)]TJ
T*[(28:)-600(   return execname_string;)]TJ
T*[(29:)-600(})]TJ
(30:)'
T*[(31:)-600(bool want_echo\(\) {)]TJ
T*[(32:)-600(   constexpr int CIN_FD {0};)]TJ
T*[(33:)-600(   constexpr int COUT_FD {1};)]TJ
T*[(34:)-600(   bool cin_is_not_a_tty = not isatty \(CIN_FD\);)]TJ
T*[(35:)-600(   bool cout_is_not_a_tty = not isatty \(COUT_FD\);)]TJ
T*[(36:)-600(   DEBUGF \('u', "cin_is_not_a_tty = " << cin_is_not_a_tty)]TJ
T*[(37:)-600(          << ", cout_is_not_a_tty = " << cout_is_not_a_tty\);)]TJ
T*[(38:)-600(   return cin_is_not_a_tty or cout_is_not_a_tty;)]TJ
T*[(39:)-600(})]TJ
(40:)'
ET
Q
Q
endstream
endobj
90 0 obj
2025
endobj
94 0 obj
<</Length 95 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-251.696 -2.7 Td
(util.cpp)Tj
-135.509 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(41:)Tj
12 TL
T*[(42:)-600(wordvec split \(const string& line, const string& delimiters\) {)]TJ
T*[(43:)-600(   wordvec words;)]TJ
T*[(44:)-600(   size_t end = 0;)]TJ
(45:)'
T*[(46:)-600(   // Loop over the string, splitting out words, and for each word)]TJ
T*[(47:)-600(   // thus found, append it to the output wordvec.)]TJ
T*[(48:)-600(   for \(;;\) {)]TJ
T*[(49:)-600(      size_t start = line.find_first_not_of \(delimiters, end\);)]TJ
T*[(50:)-600(      if \(start == string::npos\) break;)]TJ
T*[(51:)-600(      end = line.find_first_of \(delimiters, start\);)]TJ
T*[(52:)-600(      words.push_back \(line.substr \(start, end - start\)\);)]TJ
T*[(53:)-600(   })]TJ
T*[(54:)-600(   DEBUGF \('u', words\);)]TJ
T*[(55:)-600(   return words;)]TJ
T*[(56:)-600(})]TJ
(57:)'
T*[(58:)-600(ostream& complain\(\) {)]TJ
T*[(59:)-600(   exit_status::set \(EXIT_FAILURE\);)]TJ
T*[(60:)-600(   cerr << execname\(\) << ": ";)]TJ
T*[(61:)-600(   return cerr;)]TJ
T*[(62:)-600(})]TJ
(63:)'
ET
Q
Q
endstream
endobj
95 0 obj
1535
endobj
99 0 obj
<</Length 100 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-256.358 -2.7 Td
(main.cpp)Tj
-130.847 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: main.cpp,v 1.9 2016-01-14 16:16:52-08 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <cstdlib>)]TJ
T*[(4:)-600(#include <iostream>)]TJ
T*[(5:)-600(#include <string>)]TJ
T*[(6:)-600(#include <utility>)]TJ
T*[(7:)-600(#include <unistd.h>)]TJ
(8:)'
T*[(9:)-600(using namespace std;)]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(#include "commands.h")]TJ
T*[(12:)-600(#include "debug.h")]TJ
T*[(13:)-600(#include "file_sys.h")]TJ
T*[(14:)-600(#include "util.h")]TJ
(15:)'
T*[(16:)-600(// scan_options)]TJ
T*[(17:)-600(//    Options analysis:  The only option is -Dflags. )]TJ
(18:)'
T*[(19:)-600(void scan_options \(int argc, char** argv\) {)]TJ
T*[(20:)-600(   opterr = 0;)]TJ
T*[(21:)-600(   for \(;;\) {)]TJ
T*[(22:)-600(      int option = getopt \(argc, argv, "@:"\);)]TJ
T*[(23:)-600(      if \(option == EOF\) break;)]TJ
T*[(24:)-600(      switch \(option\) {)]TJ
T*[(25:)-600(         case '@':)]TJ
T*[(26:)-600(            debugflags::setflags \(optarg\);)]TJ
T*[(27:)-600(            break;)]TJ
T*[(28:)-600(         default:)]TJ
T*[(29:)-600(            complain\(\) << "-" << static_cast<char> \(option\))]TJ
T*[(30:)-600(                       << ": invalid option" << endl;)]TJ
T*[(31:)-600(            break;)]TJ
T*[(32:)-600(      })]TJ
T*[(33:)-600(   })]TJ
T*[(34:)-600(   if \(optind < argc\) {)]TJ
T*[(35:)-600(      complain\(\) << "operands not permitted" << endl;)]TJ
T*[(36:)-600(   })]TJ
T*[(37:)-600(})]TJ
(38:)'
ET
Q
Q
endstream
endobj
100 0 obj
1994
endobj
104 0 obj
<</Length 105 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-256.358 -2.7 Td
(main.cpp)Tj
-130.847 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(39:)Tj
12 TL
T*[(40:)-600(// main -)]TJ
T*[(41:)-600(//    Main program which loops reading commands until end of file.)]TJ
(42:)'
T*[(43:)-600(int main \(int argc, char** argv\) {)]TJ
T*[(44:)-600(   execname \(argv[0]\);)]TJ
T*[(45:)-600(   cout << boolalpha;  // Print false or true instead of 0 or 1.)]TJ
T*[(46:)-600(   cerr << boolalpha;)]TJ
T*[(47:)-600(   cout << argv[0] << " build " << __DATE__ << " " << __TIME__ << endl;)]TJ
T*[(48:)-600(   scan_options \(argc, argv\);)]TJ
T*[(49:)-600(   bool need_echo = want_echo\(\);)]TJ
T*[(50:)-600(   inode_state state;)]TJ
T*[(51:)-600(   try {)]TJ
T*[(52:)-600(      for \(;;\) {)]TJ
T*[(53:)-600(         try {)]TJ
T*[(54:)-600(            // Read a line, break at EOF, and echo print the prompt)]TJ
T*[(55:)-600(            // if one is needed.)]TJ
T*[(56:)-600(            cout << state.prompt\(\);)]TJ
T*[(57:)-600(            string line;)]TJ
T*[(58:)-600(            getline \(cin, line\);)]TJ
T*[(59:)-600(            if \(cin.eof\(\)\) {)]TJ
T*[(60:)-600(               if \(need_echo\) cout << "^D";)]TJ
T*[(61:)-600(               cout << endl;)]TJ
T*[(62:)-600(               DEBUGF \('y', "EOF"\);)]TJ
T*[(63:)-600(               break;)]TJ
T*[(64:)-600(            })]TJ
T*[(65:)-600(            if \(need_echo\) cout << line << endl;)]TJ
T*[(66:)-600(   )]TJ
T*[(67:)-600(            // Split the line into words and lookup the appropriate)]TJ
T*[(68:)-600(            // function.  Complain or call it.)]TJ
T*[(69:)-600(            wordvec words = split \(line, " \\t"\);)]TJ
T*[(70:)-600(            DEBUGF \('y', "words = " << words\);)]TJ
T*[(71:)-600(            command_fn fn = find_command_fn \(words.at\(0\)\);)]TJ
T*[(72:)-600(            fn \(state, words\);)]TJ
T*[(73:)-600(         }catch \(command_error& error\) {)]TJ
T*[(74:)-600(            // If there is a problem discovered in any function, an)]TJ
T*[(75:)-600(            // exn is thrown and printed here.)]TJ
T*[(76:)-600(            complain\(\) << error.what\(\) << endl;)]TJ
T*[(77:)-600(         })]TJ
T*[(78:)-600(      })]TJ
T*[(79:)-600(   } catch \(ysh_exit&\) {)]TJ
T*[(80:)-600(      // This catch intentionally left blank.)]TJ
T*[(81:)-600(   })]TJ
(82:)'
T*[(83:)-600(   return exit_status_message\(\);)]TJ
T*[(84:)-600(})]TJ
(85:)'
ET
Q
Q
endstream
endobj
105 0 obj
2843
endobj
109 0 obj
<</Length 110 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-255.77 -2.7 Td
(Makefile)Tj
-131.436 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(# $Id: Makefile,v 1.31 2019-04-10 16:52:29-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(MKFILE      = Makefile)]TJ
T*[(4:)-600(DEPFILE     = ${MKFILE}.dep)]TJ
T*[(5:)-600(NOINCL      = ci clean spotless)]TJ
T*[(6:)-600(NEEDINCL    = ${filter ${NOINCL}, ${MAKECMDGOALS}})]TJ
T*[(7:)-600(GMAKE       = ${MAKE} --no-print-directory)]TJ
T*[(8:)-600(GPPWARN     = -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast)]TJ
T*[(9:)-600(GPPOPTS     = ${GPPWARN} -fdiagnostics-color=never)]TJ
-6.6 -12 Td
[(10:)-600(COMPILECPP  = g++ -std=gnu++17 -g -O0 ${GPPOPTS})]TJ
T*[(11:)-600(MAKEDEPCPP  = g++ -std=gnu++17 -MM ${GPPOPTS})]TJ
T*[(12:)-600(UTILBIN     = /afs/cats.ucsc.edu/courses/cmps109-wm/bin)]TJ
(13:)'
T*[(14:)-600(MODULES     = commands debug file_sys util)]TJ
T*[(15:)-600(CPPHEADER   = ${MODULES:=.h})]TJ
T*[(16:)-600(CPPSOURCE   = ${MODULES:=.cpp} main.cpp)]TJ
T*[(17:)-600(EXECBIN     = yshell)]TJ
T*[(18:)-600(OBJECTS     = ${CPPSOURCE:.cpp=.o})]TJ
T*[(19:)-600(MODULESRC   = ${foreach MOD, ${MODULES}, ${MOD}.h ${MOD}.cpp})]TJ
T*[(20:)-600(OTHERSRC    = ${filter-out ${MODULESRC}, ${CPPHEADER} ${CPPSOURCE}})]TJ
T*[(21:)-600(ALLSOURCES  = ${MODULESRC} ${OTHERSRC} ${MKFILE})]TJ
T*[(22:)-600(LISTING     = Listing.ps)]TJ
(23:)'
T*[(24:)-600(all : ${EXECBIN})]TJ
(25:)'
T*[(26:)-600(${EXECBIN} : ${OBJECTS})]TJ
T*[(27:)-600(        ${COMPILECPP} -o $@ ${OBJECTS})]TJ
(28:)'
T*[(29:)-600(%.o : %.cpp)]TJ
T*[(30:)-600(        - ${UTILBIN}/cpplint.py.perl $<)]TJ
T*[(31:)-600(        - ${UTILBIN}/checksource $<)]TJ
T*[(32:)-600(        ${COMPILECPP} -c $<)]TJ
(33:)'
T*[(34:)-600(ci : ${ALLSOURCES})]TJ
T*[(35:)-600(        ${UTILBIN}/cid + ${ALLSOURCES})]TJ
T*[(36:)-600(        - ${UTILBIN}/checksource ${ALLSOURCES})]TJ
(37:)'
T*[(38:)-600(lis : ${ALLSOURCES})]TJ
T*[(39:)-600(        mkpspdf ${LISTING} ${ALLSOURCES} ${DEPFILE})]TJ
(40:)'
T*[(41:)-600(clean :)]TJ
T*[(42:)-600(        - rm ${OBJECTS} ${DEPFILE} core ${EXECBIN}.errs)]TJ
(43:)'
T*[(44:)-600(spotless : clean)]TJ
T*[(45:)-600(        - rm ${EXECBIN} ${LISTING} ${LISTING:.ps=.pdf})]TJ
(46:)'
ET
Q
Q
endstream
endobj
110 0 obj
2618
endobj
114 0 obj
<</Length 115 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-255.77 -2.7 Td
(Makefile)Tj
-131.436 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(47:)Tj
12 TL
T*[(48:)-600(dep : ${CPPSOURCE} ${CPPHEADER})]TJ
T*[(49:)-600(        @ echo "# ${DEPFILE} created `LC_TIME=C date`" >${DEPFILE})]TJ
T*[(50:)-600(        ${MAKEDEPCPP} ${CPPSOURCE} >>${DEPFILE})]TJ
(51:)'
T*[(52:)-600(${DEPFILE} : ${MKFILE})]TJ
T*[(53:)-600(        @ touch ${DEPFILE})]TJ
T*[(54:)-600(        ${GMAKE} dep)]TJ
(55:)'
T*[(56:)-600(again :)]TJ
T*[(57:)-600(        ${GMAKE} spotless dep ci all lis)]TJ
(58:)'
T*[(59:)-600(ifeq \(${NEEDINCL}, \))]TJ
T*[(60:)-600(include ${DEPFILE})]TJ
T*[(61:)-600(endif)]TJ
(62:)'
ET
Q
Q
endstream
endobj
115 0 obj
1098
endobj
119 0 obj
<</Length 120 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(04/10/19)Tj
-0.659766 -12.8 Td
(16:52:29)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-267.627 -2.7 Td
(Makefile.dep)Tj
-119.578 18 Td
($cmps109-wm/Assignments/asg2-shell-fnptrs-oop/code)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(# Makefile.dep created Wed Apr 10 16:52:29 PDT 2019)]TJ
12 TL
T*[(2:)-600(commands.o: commands.cpp commands.h file_sys.h util.h debug.h)]TJ
T*[(3:)-600(debug.o: debug.cpp debug.h util.h)]TJ
T*[(4:)-600(file_sys.o: file_sys.cpp debug.h file_sys.h util.h)]TJ
T*[(5:)-600(util.o: util.cpp util.h debug.h)]TJ
T*[(6:)-600(main.o: main.cpp commands.h file_sys.h util.h debug.h)]TJ
ET
Q
Q
endstream
endobj
120 0 obj
944
endobj
4 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 16 0 R
/Font 17 0 R
>>
/Contents 5 0 R
>>
endobj
18 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 21 0 R
/Font 22 0 R
>>
/Contents 19 0 R
>>
endobj
23 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 26 0 R
/Font 27 0 R
>>
/Contents 24 0 R
>>
endobj
28 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 31 0 R
/Font 32 0 R
>>
/Contents 29 0 R
>>
endobj
33 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 36 0 R
/Font 37 0 R
>>
/Contents 34 0 R
>>
endobj
38 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 41 0 R
/Font 42 0 R
>>
/Contents 39 0 R
>>
endobj
43 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 46 0 R
/Font 47 0 R
>>
/Contents 44 0 R
>>
endobj
48 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 51 0 R
/Font 52 0 R
>>
/Contents 49 0 R
>>
endobj
53 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 56 0 R
/Font 57 0 R
>>
/Contents 54 0 R
>>
endobj
58 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 61 0 R
/Font 62 0 R
>>
/Contents 59 0 R
>>
endobj
63 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 66 0 R
/Font 67 0 R
>>
/Contents 64 0 R
>>
endobj
68 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 71 0 R
/Font 72 0 R
>>
/Contents 69 0 R
>>
endobj
73 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 76 0 R
/Font 77 0 R
>>
/Contents 74 0 R
>>
endobj
78 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 81 0 R
/Font 82 0 R
>>
/Contents 79 0 R
>>
endobj
83 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 86 0 R
/Font 87 0 R
>>
/Contents 84 0 R
>>
endobj
88 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 91 0 R
/Font 92 0 R
>>
/Contents 89 0 R
>>
endobj
93 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 96 0 R
/Font 97 0 R
>>
/Contents 94 0 R
>>
endobj
98 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 101 0 R
/Font 102 0 R
>>
/Contents 99 0 R
>>
endobj
103 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 106 0 R
/Font 107 0 R
>>
/Contents 104 0 R
>>
endobj
108 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 111 0 R
/Font 112 0 R
>>
/Contents 109 0 R
>>
endobj
113 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 116 0 R
/Font 117 0 R
>>
/Contents 114 0 R
>>
endobj
118 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 121 0 R
/Font 122 0 R
>>
/Contents 119 0 R
>>
endobj
3 0 obj
<< /Type /Pages /Kids [
4 0 R
18 0 R
23 0 R
28 0 R
33 0 R
38 0 R
43 0 R
48 0 R
53 0 R
58 0 R
63 0 R
68 0 R
73 0 R
78 0 R
83 0 R
88 0 R
93 0 R
98 0 R
103 0 R
108 0 R
113 0 R
118 0 R
] /Count 22
>>
endobj
1 0 obj
<</Type /Catalog /Pages 3 0 R
/Metadata 128 0 R
>>
endobj
7 0 obj
<</Type/ExtGState
/OPM 1>>endobj
16 0 obj
<</R7
7 0 R>>
endobj
17 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
21 0 obj
<</R7
7 0 R>>
endobj
22 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
26 0 obj
<</R7
7 0 R>>
endobj
27 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
31 0 obj
<</R7
7 0 R>>
endobj
32 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
36 0 obj
<</R7
7 0 R>>
endobj
37 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
41 0 obj
<</R7
7 0 R>>
endobj
42 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
46 0 obj
<</R7
7 0 R>>
endobj
47 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
51 0 obj
<</R7
7 0 R>>
endobj
52 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
56 0 obj
<</R7
7 0 R>>
endobj
57 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
61 0 obj
<</R7
7 0 R>>
endobj
62 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
66 0 obj
<</R7
7 0 R>>
endobj
67 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
71 0 obj
<</R7
7 0 R>>
endobj
72 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
76 0 obj
<</R7
7 0 R>>
endobj
77 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
81 0 obj
<</R7
7 0 R>>
endobj
82 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
86 0 obj
<</R7
7 0 R>>
endobj
87 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
91 0 obj
<</R7
7 0 R>>
endobj
92 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
96 0 obj
<</R7
7 0 R>>
endobj
97 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
101 0 obj
<</R7
7 0 R>>
endobj
102 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
106 0 obj
<</R7
7 0 R>>
endobj
107 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
111 0 obj
<</R7
7 0 R>>
endobj
112 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
116 0 obj
<</R7
7 0 R>>
endobj
117 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
121 0 obj
<</R7
7 0 R>>
endobj
122 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
14 0 obj
<</BaseFont/IGHOLC+Courier-Bold/FontDescriptor 15 0 R/Type/Font
/FirstChar 32/LastChar 126/Widths[
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 0
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 0 600 600 600 600 0 600 600 600 0 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 0 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 0 600 600]
/Encoding 127 0 R/Subtype/Type1>>
endobj
127 0 obj
<</Type/Encoding/BaseEncoding/WinAnsiEncoding/Differences[
39/quoteright
96/quoteleft
126/tilde]>>
endobj
8 0 obj
<</BaseFont/FCEUCC+Times-Bold/FontDescriptor 9 0 R/Type/Font
/FirstChar 47/LastChar 58/Widths[ 278
500 500 500 0 500 500 500 0 0 500 333]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
12 0 obj
<</BaseFont/IMEXLG+Times-Roman/FontDescriptor 13 0 R/Type/Font
/FirstChar 36/LastChar 121/Widths[ 500 0 0 0 0 0 0 0 0 333 250 278
500 500 500 0 0 0 0 0 0 500 0 0 0 0 0 0
0 722 0 0 0 0 0 0 0 0 0 0 0 889 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 500
0 444 500 444 500 444 333 500 500 278 0 500 278 778 500 500
500 0 333 389 278 500 0 722 0 500]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
10 0 obj
<</BaseFont/ZRKBEE+Helvetica-Bold/FontDescriptor 11 0 R/Type/Font
/FirstChar 47/LastChar 52/Widths[ 278
0 556 556 556 556]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
15 0 obj
<</Type/FontDescriptor/FontName/IGHOLC+Courier-Bold/FontBBox[-21 -205 623 695]/Flags 7
/Ascent 695
/CapHeight 597
/Descent -205
/ItalicAngle 0
/StemV 150
/AvgWidth 600
/MaxWidth 600
/MissingWidth 600
/XHeight 451
/CharSet(/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/R/S/T/U/W/X/Y/a/ampersand/asciicircum/asterisk/at/b/backslash/braceleft/braceright/bracketleft/bracketright/c/colon/comma/d/dollar/e/eight/equal/exclam/f/five/four/g/greater/h/hyphen/i/k/l/less/m/n/nine/numbersign/o/one/p/parenleft/parenright/percent/period/plus/q/quotedbl/quoteleft/quoteright/r/s/semicolon/seven/six/slash/space/t/three/tilde/two/u/underscore/v/w/x/y/z/zero)/FontFile3 123 0 R>>
endobj
123 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 10201>>stream
Gatm^$!:-Xf(Or^P>c8)2'*.Z-D5LQ:hr:2D&mEX4:csE'bS:s#W#$p,7lb!+:/Sl#ZD!a#RV'?
B^8cUhHF]!lYV"Ge^!Q!Ci-eFs/+]Fmun:eJU[@hTDoK@EmE@U>3gUg]@K.c_L!-9iGbAl+\n2V
_BcIRMk^fe+3\05F-u-F1!b1mUOA39*j+Nf:TQ&grD_VZ%N+..7X.ut(GKY^UO*2o4:4]Q-G2=.
eD-3%ij^h%-p/^$DsI$J4/^>j0sgV<\M(_qZJYX<cP=3[@0r[t=MMuQQfPAaEEl1>CuQso/+DBB
d@sIPnE@6hL]kJ@#7cD-?m"..001Z,Dj;_S'Gi,lp7&X&Rbtc.J@W#U[fm^=1&I.Ir76d9`I@.N
fIcamKHQ)dA[/k5MZ[&!Xc.a8Z7=gm`&El\-a-+p[l/C/]!TiWkm',"D*5<W4CX4^laEbZd4m^i
SW`Nse7hRR#LD$c1M#(.fl,-g)^(\5:Hnft"Y]]MQiFo/02GjF_CLfc:F:l(`(&`t@Nr(6=@Bee
CaLJ@>DUD><alE@NL3=S-`.J;M!;iQ@Ks)q=AI'c!f7Z1/0]mP8^&N5M:[SE`$us]G_;AV]Lf1O
jqDNd(Pr=63oVGp4gBQ?8-fKYa<ZGW'?"k,T6QN$9T1*#-(Z;e,=W;=Lf))gib;j>nI2[l(esLV
4iA1h-H6\E&fecD(e495?Gnh?Ri"q?M<>/-Gb3h*6.kAqUZ7mC_d41'_2IK!_L!fbM^p+:nOT7(
MLT++'0cuQISrAHCP:]HB:cDi$lF8<e<-ZHSf.N$n`\RohrGaPhi9G>0@9sqQX`b9c?T&aO2goO
hp-50j%#)Ys1.@VmQR6jG[=2n3$Wf:-kX2R2p/>GJ#\"`"Cf77#ob6k9_d4-HK+jZ.jmq9(/KT:
KY28AdbIF5PG_2?1hG/Nh3>Q$2lG)&$`@=%[VYg2l-^H<)<YULSnX\%Sb[OVo.t>lG/C)a-7=Ro
&^I/P2ffYSGbE/YBk8bo3_0KRK</$`e<K%D!"'(T8l2NH'U0Jp<aZ(HF]jGrBi+'5!!P/-4t)kY
F$H^)8\:TpRPZ@^*Dk?Z1oH6b!@iKMf0)#,=d=G6!.>(^C/PhHol5LS,c`S>@A&fRF3/cJ)jaj7
%=[8p[#P(4$)=$:nk[)mb\DG>W<PDVd)G.CVh$f=<L&"aQU4:r:BK$,<EAipA-Qb)b1+*>DpPL3
UZJa`[;ZSs^O,BjUU=V02+M,;&?Xq484nfWb<70L]&.8%`h`/-!k<siY,!*L4WIV2^N:"=#"5cT
&B_C_VTm+h#hV_d\T#HK]W-#!i!V*)1:_&'\RZ>7k,:-T.^]u35a!S6+eO`R4u4@[hJ=_H<PH.^
'*B_7e::ecl.KcEAQl,Ec9poGcls1B4d_HPm4u9"W-*%-X1rWbVj*,3^VURH&($+<>tQ#knT?qP
Z25H&bJWmU4)i%C:?_-drIYbq34E:Rs8IY7QB;J+8+mk0<+XFDF/nbhB1P#[hMn/1M`OnG#l2]d
k)-$rEBc)R!-&1@YkpGk9'LUrC"*j_C&q=(3fuW9rLkn5qU'uCOJ(eP6Gu;q1n4Qdo8\Gm9s'B6
s)+0,itKFdMpgGni71DiYenLBmY&'>?LT/FK18cOG;A_T@j1XLAH.e,_6K(kj?qu]bah(MF_fI3
V5lN#S%%\Ra.M.uoW?KJ74-O(JbaPHhk6!a$_`HY-]_e"W^29l<N75Xl`)t@V!kH"9;QdR=m.m4
Wor`f-"Wb'jf2#@.bF(ZE)?8>MMeE/CDXdQOc#&DXl75.K!A4?a3q4?b4:H#4Uq_`r&#a+Y2%.C
EJeS-S$4OIR'"S4RX`Mp/]+`54IV7aUQOb/iG'F&$(j[nn?iea05is%BWe>=K5.D=YrXK^1J=DQ
`/+LkBI0r\oc?Al&[1#4$?,E_s6/mSbq1DJSY0;(as]e?Pb?VFe-<<`>7)pSb[;nP1?sc`/bLb<
W6I25N>+UM9I2QnNDBeIg5IjH>gPY^j>ipRana!a40_5@^IOn,4Xn(]P/hLu_GQDdpbVJF^JDEo
89bJ=4<+mF!6'+0naM7/CP0!DPd+:i-FG@-i,Z+1Pk9O1`apHm4s!Oi8N;\9VV=D#b+;M'>]C<C
;Qm87>VLXpkO$9Hf(r!ih:?+!%c$$fn6Kh3GC"\uUr*hoU0PMcoQXk!q%^DCIJ/'/R@7pL%X"3F
k9=j>'UgR<&S,5r;GgG.`rs[?50`TU0](RBW:Y$s]u]a[fM.(h^oiV%EHH;%AEHA.hbHm@Gg>Qm
XI)7k`nOMYe31f"P%4&&@_7'*9Zh1UOO^#6++s8l7FWA6kkI?b3rH&9`#35>)YI;7'OEe2Bfdt9
dpXd*ot,c*UJf!>PD#)uO`DPr#=Kn17;Pt=$YTT9'eT)Yp511qHagQD`*[iCi)LbJ%,:likq=n>
8C4CE<(<9UAHcY:BJBNL"h?a'"SoUJCe%ZS*2Y]`>+)']l;ST6R[5_d1BMjs@:b#4,dZEa]0ji=
2ZO'dVg!"@%EM%&SC,=E@A;V;j'a/2mn=Fc8V1-:1!?LHP8`t&+O_b#G]GYQ;`g,(kMDEN3Sujn
/e"/"2foEci.Q^%PNa2I8'<rgB3_4d)>n]>+Q_bb=jiR=N84op3Ac>M&5FDE!MB@9[&.iU)47_P
1@W761SF$5Wu^;jP%:UIg)a6,!J3R=qC<N^)P)M?DT%Y-(d([!^]p-0Ps#=1l&D@]AanF/,-=Gu
fe[D_Pth?*DM&mPnQZU*#8eFF4JOFl5;W'We/q-5*ntp8*)7Z(kk[A#$qA'A?HasFP:fE^X0B!^
`F(1394.k!Q.I1c7EJMt<41XLq0k[B92Q)*]X%<)..i]0hpGJ:>;_]2;E;gk&pL.Qh7g)B*\1&-
QC?k(K!9I\C3Obgo%ZNFP$6AsTG/76MiDSQkEM>&;X#:+I,5HbiiO,-N&@teWG/J3RjTkN(+P<Z
8<ogPSibf)8oY,AI#IA5ir\KN(oX@kS$^(@[Xq[Y)L(4X"\oQma!ogb0[<[/=S`&@0N\P]b=)$N
G53k3RC^3:S[Qh@VM9h(QAaZ2kY*a#(nq$Ze/2/uP\Vu7'k&)0aoaMgE_RI=92gC>SXH^c18oFZ
GT!TFm+AjY8+\R@KNcJ"YLgM9^@uI%Qa-PpT7ZZG?_=4NL+dYcEB).(3.N432`+e,@?`si;Re"Z
>(*"GFrWe;<EXWl"K=/];3`8qRNK?b)#;uEFTb-q0AYIcan,8.eRo%UXX0g:L2nP@a!ii+<OuR6
@^';H#Qs(\bYi;?c3PoU+pl7NTu=seOtP2)L4tp_r\E>\3)b,kbu96C`pOhKAb]e7IRQ8qmh^G:
#C6V&)C(_bb0U8*#q(t"28H.L%Q<HZ&'%_H2<@Y?I$_G2D[="md_AqY.m;"I5Dt4(-WV3,Q\tHF
MVOFP&6VJ`@FpT&[n/=V!OYd0I9$UmE9cf)W7o2-qVjUZ$bd9jWn?&Ae!P):itT!')U4hNWSekD
IH@V9[eAcH\+X6.kQd.pP!1oA>o6Z[G\H&%(OtuU54#Bi/s%H]XA,k6K\`Ct-Jdt>+,An\30H`N
(r\'D1l]&)L4%(_PsWg`AeMh0^>V8o5N"KU_/l;sORY[K@d97[QtG5q63['S#.DRK!JC%J"f`Zu
*q2aCPQW-iWoW6ZUi:T=&-7nJW/CG.-"^Xo=EP9u4G@,$ICnYa.@7gbE7&jAj`J--.!Ug<2:=R*
216FGk'fi"$\$j+B*6qu?WbQ"PP`oCh%"BqW?O)3c.W0\ET`N)dC]R#<\6#`:&16;IDpkTPW@Qg
<U;=k@Voi(\hDI?5!O/<\+b*uS>2/F!AtD?>feZ`A)S(\eBRia_8M*CmNK>PFodR0>aCKn/4dV,
%$IUBas;biX?U51FHj-J1]cl2]hB\FjR"UXcAr%u^oI/mJI->%#S9]^qeX/'=0@p+cNs<\k<X$4
RqQU6G!PGSZrS3\G3&Vaene'MYU>BZE$`O,o[S$OVV[\h)GTjX_ZjYISglCN%"Z(a?YjD//)`%O
p.?<um*^SN$-T+#V.i1'&l%ph2-P]Gq7p]7GXG!?oV&&>In?6\LL+^`03X_j?j[?ki3;AA4u(FO
]n!iR'8,qON/EQ'JNb$u>)Vp<jh@Armgp<%K=[L_2)keASnJ`T,O/VT@f/.9-qhN*_E748]Kr9S
V1M*B4?ffB1!"/-eC/$)WMe+=>aU-)^"'nCD]2ITAUUcG?S!55e@hqU*?iaa[q/eF++]?8*@EpD
eQ`/7_0ZKT6V`B+gfh6&C]qAHHUSX=(.b%uNLBJ!)G->&6irKU,a!oC6lET;21NMtHVNY"g012f
d8Y.p:Dj-7>\jh.6Qk:(KTSY!pehoXb96bIDBC[^E#\&=JB.:1.p(l+.%\%-?n*kiZh!?tLu;#G
aB>+9JG%K$<Ir?*=X6[R2Df]2`*L@Upq=.<i\!mO#aBj1QuFmcdbUS[1X]N+e$le1/l-9(VL$29
4.%I$R5$OaClugH<O,YE^_Ub?Jupk>_A"hH6fj?::uU*cCWSeNM0#Gfh:>n8D9!jHJSWY,<OQ'W
Lel==:=U\ipLf3>Vk2PjrqTE4Mqp"-e@1mmJWl`qA]H2J<#nR]8CD8_>(aDfDaDMq7SaVgC)_TV
$1D86\dKl>^,-gi%WT60Tbfi07E5W?QX90@omj5AH=Zf`6'MKj7\]FO'+&%o(NE"FWP%"kTGsL0
P-_K8E#$5N25XS$\@P-^O7h"dFME[fFfV5ib1UN_"*9th/;$F[B3hhTLK3Y4:MnWXXW-4U*\sK7
mQtO9I9p:*('Du_FV2:eln1(7D?0AbKX<rDdF715k1u>_?jYJS*:d.O>7$e8)R-eb9?3Wa[k9"W
N:YN'd^NGZ#Y5D4_-YtG;*I*1GIeo!.ksPGE"M,^?n_ijU/H!%`%Gs0c(N26>[,AqnOt#MhJpDA
%)c_9J;,@U!q%^8$JAH_hWTQb7mirS6f[YA3^ocPjuG'Rr@K1Vs-\YRpD)Z4K(n_`j5f,b?n$M_
#6een"#LH]7c'>j%se_+B#$F9IkA.#'%@U3Rt2$lhl8Y9VCj5p0IK/L*<PAU*KJ(=<;q<Wm%#XY
G;(R#7p*2sT$@hDdL#pahYZ'O%lB`7SjC\t`TU<XJ&9lX-KN)-iPM4]n#j8PgsN[0mS04M]RTb?
CrA]Y?Cj<.g7n$Z(OCT)rP+&X=ScqU9u2(eo;q/J0n:s(=`$VYfi2Upe8Qa-gFOc#R;rZ9AZr28
YEi>OMM+jHF[c2s>u**-1.QRCA?c&u\jV>@GPZfiNVcqh0=$7K!'$NgXfL)Kqh*/V]BOg/hh+\i
ag6ssb"mX"$@9tq'_)>t5#?;!LT*1PkYsX/AGG##3-jh7`0RP&,$##tE7.J'hg06`(uo9f1Pn<B
'Pt`t"HAm-"o0@7?`1\Zk>.="G6k\JFrlUt,/EP!812*?]"L\Vq>B(k6MSVW1la7fO`1@"l+<FN
Y#r/Iacc<u5.Yh&asTMO)n`dlJie>-CB%miT<tUE+)cl-Q;cWm"ZJ+b`,$rO/U?SI<QSt%!%P:U
Ei]+7-4j$f$![>;B'[q1pS;Nl!Q@j\NjNaGl!4%Us3<bVqa90C#TW)^$XE[s\GRqPIj0rs^-fe!
Vc3=2GE`9SQQh,i!iQNJh`hTolu'SeG2s(A:AmBN%N6i_$3)+/=(X,PTu7m&JDRpX*Dq.cf8'B-
&%Xt%I5Hn:_\_6qo0'7LE##hhY@(`[TS-UeVauY6%]p6!cNCE!Mp@G1s+-]Fd:i:X34u-ubk_/[
b^8QmQl--gg#&G[Wm**lVZ;uc.>b!LX*>G0p?C7'-?!VNE@t;ER+A4KWH^YVP$P&cau$#(2849U
jKd>%l<BJSFWCIN,*amX5jfC7CmU0!)Qi/hYp:Er'HOJ^"_ZlQc?KStp%e&?G^)E[4g\''>oRC)
dB_8lV,&fl(!EUs;1G=Hl2%eDEM5if;%s"!XramZ[n4Osp3N\:\FWKDjPV0['rrt.R8%iP4',di
?Om9Wmj^c\LJET]s4P@u1J!O=M4HN-FD01-mRb*eS)>3/)__UOUs%#t"_;4U.tP?;$4k/[3nUDD
L.W_J?A/;speP.M7m$Ff+KhY3hDbWQCm3J1)u1XWM4ERT\Tf,2IcG=$&$Cle\,'cJquD(:qDd*$
n62gJlLhS9FY\,V9io>F-Pn932Ij<F3.fl*%@_uNY2"Eu>lea\=Q<q\'F%:'fJQ8cM&oZbhNgg.
"s-n2fQqQ+M9%L$GJFB$g2`qPdYYPni-)T9(OI&0/6f7A4\Loh1a"B5R<r>i[J4a/oL%p$_kbTj
@Cm2!Z!YiJcU*,?c.TeQ2\j8`kc2"blmX)2/EsFBs*\oqZNT^VnNUeQ>Z"`b^=K(k$djqUqR9EB
Ot+?$]:)qT7Vkl4;&S]2M=#`L&]02tbklYN`MNI,A>3a'9N.bK!*3e_WX*TgR3.=Ro/8^)Iub(\
ET)5/8NC$`/I-Fs:R0;56W;dpA-Ao<!gC/.aX&>q*7f/VO>XiG=BE\pMXD@<%E29h[R^pA?gC>S
_=\jU&/7,(Kbm-2Ms.tqS$$#BN#Bu1lu>JG(pr`2m7DJAnKT]5("21lYf!i^1382XUr6Xq#Va%D
fi):uFt;n0BYK')I.RK2#r7b9Pba]5C`-'"N'`Ydi\,-S9J9!X*t)PSP1]D;AI=Mt;R>.n1)qc%
#jRHgMTUJf(j"uj.)$o!A<XZ@Hp+D_f/6X\))+obAskZMbtmh1kb,3!p.`b1AV)aGT[@QH20h6T
6FfNn#">1E^SHro%O6A4QGXP.Td!hQI,uJ61Fj\OkED[gBn-tp))J<.Y'jHHQP[")d0Mc>A?$9[
QQsd^1^<^U1oplNDBj&tmSX3H:OQ5C?&>^\Bb@M"hGHLg?bqALT0@e^-B#SLPYcKo<O&^GV;pOm
@Q[n3;Gpbs?>G]2D^"Sh).4)E*'N>)jK4[3ZlkQiX%KCq.PW!D(>OJY:;AUB:B60(6f(GVNBNh0
SDZSpRec2NgYL0mT6m)(mTmR4LY_Q2Aha3@nlEO!3g`Vn]Y3l/UG5PO-HJ3lCFq2^=>e(G+sCdb
6*Jo>M$Pq]-C1]*"mAr-=DhDaGl.#B(Eu'Ke;p4D4'eCXSs5Y.,F8d:;aN:t!cNYRZ@jHse*5K"
-PR!I_(jPkqU`+g+fbdFc<IHp!ZF<-LGuT44k]C4+e*=SbTURHHKRn';RRKSpr6;]f%E`N%\)DS
LZ_`<M@J93i*08g?!!J3PZ8'7hYqF`9<l#9fR<.D2%inaXu9Fe5g91q#AVlnT`I;9#rRdQ^l_lh
PG\PtP,-%+\5IUQJt3iTFYY'4F@g93bE'V[T,J3aqo]'(&$<,rFn='JcYtS/LAj/>%#+p$V#G>l
j1T\s9!24*HLYYlR_TlpfJ[JL(kWLK6?:.`akCjm,9\XSc7gOG.P<GQU;-eo,(t1>HGq'X;:Y_S
HVJXb.EA56GBlF^a8IS:qjJruR,1Nr)"2gAM-!`Z1$Iolb2tjmT_Y2FrSA9/?,,ACTJTna.:=&W
d+I0FM68S)7+>:k\uCc3i&md/iKHf7.5>F7\7;9bgQ5Gb7(]*3m6L6LA/n/rG9dn<fW/+Ja_VrA
9h)VCf=/3.efPU'Ol8#LiSfQ%>$Rcj9IGU(QI:8.#<q]j=39Zo5A?;j_m5Z09rs@JbYX1-!qalI
Mc=CN8tbgAe0Na`8kmQAm,6)N)i&]nq1V:%,kOUk`G#Nn.Iaa0Q'N0KN4B,Y'J_$Lki@--*jB*^
#8%EZ'n7!D?ITTmYm"qE_5X0u^n'IR+Fop&!s+ENSNE=Yc_OkKQb]#Hk*F<aNmGMM'`.)rqI.GA
[r6K'0bG3G]SReMXBZY6r^.K;jC&9V@+&^bB.uC;lLhSXXKE$\fgMl!DHnVU$[EjiX,bM_@N.M9
+NBl,Qu1.ue,V4WQLS!^h=s97Q0ke#V(u()&F7lL;o?..E'DI6:g`T<["8tZK^[%VUM1FI/QA.#
$"A<mD2EF7IU5<oi2^U1f<!)Dduq6qFIIEG*]TQF3'sM#3C9;/rD,%if%'cj:!HOS'3Btj?_EON
[\SS3$:N;35p2&BY>2*uX=1=h#`9SmoVRd$qiS0B5i(chYY14P1aPDsB7Hoq=5#uU!Y][j+%J^$
Bj+9A/#!C?A-F_,`2QbrgfRiS1:BbJ<D)kbX&j3I+?!J1Tu!>XQu?QJ7YfHp;2=0&[4^jXN-BX/
e^l%0;I[SQjEdB4TeiW5*/1WUFr$n*`$UALl!Q1+nc*97L?j*_(9D0DFA,SQCg9DTP>6?h=/r<#
SPH;J!!bfa6BWs\9/rkT"kJ9m_K`-2Pc`77PW1*`]^'VN*;.k:k,+?ZNY]Z(E#IFjfX[dm/'"."
m&_)DJbHI7;%6sSG#k[KPi't2S)^L]lcc2Z7\d3XLnj_HTPg<Vh7[aa_'!s(Etl78M$%eaUL>u[
%S5>3M7X>ML4p(!VX*cFO67LqO,Q-BCWiccJk#KA;oYQr,b,@N\?:fY[I`:#SgU(r+'H%UT])J.
:)?#tHNCO;;3_I\`^5)^WSg1pac[u9rSpl(ZGjWb-a&:\eA_c*-(93AbAKmk>JJo#8,R>ZG35U)
j]KKIE1);fk5Kn&MA9h?i<&cO@8?%d)i&\@c[GlNV5rRRn*^2VN1_<&38:/bl&:.5<*)/AmC'bn
kN.+F^F@sG2LYt"#?I)(C(EN)`k.ru^d#WfMO(^5f(*n?&d>g!I5bS9=R*%sJI1l1]!IqZ-NNhb
M3,tt_EukV$#fc7`gR]njk:Qe7PimWRbkG9.p]%W.c:#iUcNj:BhPE*c=b)N?b0R9cg1J&70BcY
kI49*g1!N+<HMP]Sf&5?*MV\Xh',^P-;U5".B#b-q(WV`%cHXQjlQ:Ie:*Y<bAc_,5rZ]h]'0I&
H2s9n7t9J+E5H;dm90G7bX2(JIC7=>!aMCgZTgf>7*SjkBnp3eePH;H\$_ol44fPb]>#>GJRe0+
q,>*/)-i(^^UB+g,G:F<EADoSi1BF\lh7]U4*S!lL62ESEd5?C/p(0&d(qZt#\lNSq0(L%@5g?d
k:f%W,=B2`W5PKK!s[3tHNPhiq/G\.T<^!H%JmE6j'\kT`N4XRksR@Cc?t,7!a0f+6de;t?A1\-
Qmb.;3rXd#5!T&B5D83;f^FFhi-*g=j%kHD^S,orGS:4VL51WrVX4Fh.)c()c6&TI/'a[t-m=Y3
$OR="$`NH>4"fDQg33F,bJ>"<>U`PFb9,AN>FA3-0jLBTdT=K@`WKQc><K7Tjk<sZ-<fcBP/LGn
b4?TE26f;G'fo',4F8s"hePXJc4#%VNUpN]WU].@%d;KThl4Occ;#k9Jm8a#9A.$6PtCXCeuEmZ
$!b^QOM.;[e]$-2l@:N?]o,Q1"bfCqH"Fs6YtlCk)r3r6V>'m[a^Q`b2#P1,*98O';dfDpU%+RP
Yd_0;NX6O`?^B`F@6[!1oD-4o4?<fNfO;B#2fntGf`'(%LL0Hno09TPl1DWtP,Z::1?Q]'h?)B-
[GY&hkj@cPUjOHZ\YuGu"VK8@i5de1G18FKh;&Hkari@]n>JDBZ-!7lOLX-KO]bX9c%!fDDNkt$
NiOR%fTJ?s@DB:;%&Q.q5OepGU$^Q.n.do+3u1m6D\'=Y03r)]fk!dS_"k/+=RFZ4[e/'s6"+#P
XH$:]74**MBga3C^=/c\6V^p%GoR;\[8)jLSX5n6RjTlY;<;Td=a=b1(/VN$a-[%_IXeE"QGSRP
Ss["iTnhZ'SN:S*CQGlY\:Al=::p<6qi14?c&Zc]nUE3Zb5=[]=gr:jCY.1orT*hJO7-qq[TL&Z
qfl'#^/0r*J#K<V]reiU9aE=!SusP"(kICHb0+=!*QZM?T`7<qP;I#3OSYiDAS$XUH@:nUWm>sF
r8d9r+[c!NL1Kgn#WC,X%"50LN$Y.6(DQ.lEXHm\5$G;"=:WhGR?OW;>)jeSR,o`n=Bh;*@&)1K
>\MF3qrARXMa.<A:mE;l\D,sMC^_YbO.B^HKBa<a%&0Z88Z?j4$;g*TW2Zf+RFUj#K(c4aEapi&
p8q&jQ"X,WGU)`).0[5[=g[bm7F=Q'FWj)#lhYSJei1Xopi&A9p@_o^j^A1>;mD;Yma1DDX3$OI
U@R=;)LY%#YQLrGN%Z&R2>@ZE?a'[H8Z+$P3>+SoMlShg<*jde+rm"[@oh@BBUd794rF:WamTZ`
7Q_OX'LDY(*AB+c~>
endstream
endobj
9 0 obj
<</Type/FontDescriptor/FontName/FCEUCC+Times-Bold/FontBBox[-24 -19 476 691]/Flags 65568
/Ascent 691
/CapHeight 691
/Descent -19
/ItalicAngle 0
/StemV 71
/MissingWidth 500
/CharSet(/colon/five/four/nine/one/six/slash/two/zero)/FontFile3 124 0 R>>
endobj
124 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 1276>>stream
Gar>CHV@XT'`Tep]tHO^e[qXfg:N;6GtEqK@R8?Mk(4'g%#8=T#4&+foEB**7E:d*)rkuJL;6oU
)gR01*%[$&?ma)W,5qV3/DF!2@Y21*I)TXZi\qZ,98nAqccJ2^F3a5uEmCA?+p:aW'jbWr#bLZo
0"ZBl9T_53;J_.'7sk/sHYng!%de[?)2TSO*2+5K9ABM70n>mH[V/'-PeUiVcfGWng+68XYCEsU
/3,RFm6AO&17@pk^qUaN?gu]!:-MNuRKU7Gm1>fECd(Xt[bGYSH&FiD[X.]eZWSuc\*^B($haFU
2S76$FuAgd]OX4T?neJ$Ap]Zb;=!iC,q_]IP:psEpq;'K@(,kNs%abj68K%ib\c*YR'I9\7PSQY
;BlZg7%;P%BJU!Z(P*:+'0u.g!p-'j6ZPLGLYS4WU*/Y9f.oc%5$?XX)&^lrGId9k-;*Q:SQO?7
:a;&.Z&hOEf31B4&h^,cc)WMjV;l2k;L>#]JHiWV+W2c'+pCjNVd4aRa5Q%<3H)I_S8TD;@eP>%
!VADYW$$6Hk1k*aO<eOOG!$t.NNL@/7A-R;9:;;l'2$rNHDdgQX6[uShrqWBQlYSg<TkKE.Vrj;
d<Dl;.==Np37DmKhdrW1eN+.QUdAH;R"ndIC'4q-@@VU5:F'>6Ub].VT)S$KLJ.E&k!ADUJdrc:
[TKqLF0j-a!^"4$(T/Wui%'&ps1W';WRlj;\Ct:n?iF5h[>#q>"7)5\4VeVQ)JI5@^P3"#A1MKP
V#FXT5VFMPc;k\COs`hE6,kEh)PVno8\@ZD%h^#aF.aCK]9*@-#k5)sjuNF/e.-4c$=0>K=h;U=
OSK138ogCm+i!s)IegpI,FVWaHjME5pJk;`o=>/R%r2](i&KVE=\D,WFoP2%.[V@N2q[]ab?ko4
W"]$pB2.4KqR+?%d8dt+2$!p.5oM>g^:mO*^X2_&),]H1'*T^$QL+NH*g2<B++BL$)S'X;0_N.Y
XUa_T,^oP!,YkZ+(qIR:%@<5j8D$d0\MqkoFA1:AFmKmXLDP;$4kJNE1O+'S5LpML?\M#1e/5"'
RKbh*aoO.JO01&3EVIHT$u-Q$Aq6'6,fZc1E?smO2Gc2>h1ObA6R48L3>1dk+UH7rB5?\PNmmAC
rMSMjCnZ%RN5,os?6=U)c.fG6i9K'Vo<J17I7G"k"lH^S%O==M"^,6k.KsnD_2EHBF#2:sAq`km
3qu$=.0rr8([L3qB4b[jVEu*L/4qcDP_mU`)"?K_;\9VW%nB#3oFD6keai~>
endstream
endobj
13 0 obj
<</Type/FontDescriptor/FontName/IMEXLG+Times-Roman/FontBBox[-9 -218 863 727]/Flags 32
/Ascent 727
/CapHeight 674
/Descent -218
/ItalicAngle 0
/StemV 129
/MissingWidth 500
/XHeight 460
/CharSet(/A/M/a/b/c/d/dollar/e/f/g/h/hyphen/i/k/l/m/n/nine/o/one/p/period/r/s/slash/t/two/u/underscore/w/y/zero)/FontFile3 125 0 R>>
endobj
125 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 4419>>stream
Gar>GH!"!JQ@CV7pUXcJF@m`g67l\IQ\oIC,ueZZL$OO&#`,,T8q8$0@1@nV)p9N.&jeoe_B*k7
"@YbZ'\D'gC:CLLd@Tc0[!K<!RCSBhb^B"kc$]-'I,FhXpQBlhH[b.Jh`371D]Zl,Ynk<9F%#i)
A#),a'&W.XF>/W%FWS5dXXB:bT4^r?Q;^Z*m)<WM)_LVrIF[3oJA6LMG;$ePQRFbM<G^u[PfcVh
`#4sH+`GE?*;]'FQ)joQT=#7C&L#1frq@[KRj_X6+UM;fHk_FCV6V)'Uu:tjOc4C*[eN6]7WsV>
1I!-B/PVJl;i=Gr(7ble+jLkHAC@36[j-AAZ7[\Em:tdkI\/U_G[Z'BMjoLgP=C3nKuAd&$F<\&
rr39n;'B-i;H[=T6(pF6GfbfUBqk6Y9_$6kSCO=TCVnZ*Mg1G[?DmKq#H2>$+;IPg;=RTeocY&A
,uWKr:hi)"KA&oaU39K89LVg*WI:!q[=m7#]gTP-"]0d"15\H4`ZRnL;'P9+lO?nH4MQ0$oDXY"
p#Ggm3Ga_,o9d.JHQB0f#+,[7cOZRrFht]o,7CY+Ge2h2L%?*m/KA!%E)H.7J%FEb2B@'^_AW2-
%r4);Km1b@F(F,P(AcK&3L?PdC%dW'RaRu=IPFT6!D.<uf4f*#E="#^Hk(=@c`D62Cq3*U7sPG/
HmL>`Ftfi6%NYi,M]qV2(a$gn0>#GS4G1,fYT)iYH*p[C<BYrj3b>%I;um].<@*kq--gUbKPI=s
%7<5`/t?]u%Np#$,C?n]L]E<1.h;H0dbGtM7cQlQ+YEfQ-XYPQ1g@4tVr0(5Zm:rn[BZQU`hUgP
YOf&Gre_Zob/RICKh#GU>=erCpq%8#!!bXd2_;a;f/t:m&ZV\?R;4=pEl'iFF%]\_a(UT33`UJ2
h1a2#hn1IIClt577<8d\dIkuff)tHei52Bb"3ku\EaE%:%FlU]B[[t6c=I'!8?4m]Jq5EdfF.hB
21mJ\l?[O[ijE/BX$\h#+C=Ohp;?o`?eYLGG7Gt_`?bm6!g=q5-rV.ei8]$in9V8H:Y`RlR6\Va
g_+lXB"1q#O.S3&D=XnPbcksV11#U@Y0)T/B3f5WOB;NECc(S-0XqtU@&I#`7ahnbK)Y;^mb0_.
Y$TJRW].I"lu4n/#DtY'<(Xp77,bVjCl'gh:`h)t^uF\61`e^-UM^ILF;%1"=W4dWIt9iIQ/Pe)
>&Hc_hH3o`LA3*kZY4,^@$A:.YW=^f@n]5M_>Y*DP(ZoCL?))).%?iV;OS`RG-r%mME:Ftl=j?m
_H^?8UY<T?2__6A2,pq=n2-QGh.=jI%mRUNB/4sEs0.S]T1BodSZ&#Bg?5#omM2p@B;4hC:!nmq
"'jJPp<G2uI"La-4>63t$4OJ*8ukNke=6)"SL?BBWO*'<51(9C7e8B7?<(F9J:Y0o+s1kboVPm*
Ge.C"5bP85b#@L2&O0RSI7oAd5i@iUE.);<29&"uhkXum\3#=e0OC43r(3KJHW436+iM^K3Y49D
!&r)l3cl2O%7!gt8u7dfAnuDu9KP6o-4F_-?]c'QE1sp1M2jo#"#aIVpqs(n`pR`\pc'W@"@cBm
9R;HZ0/`6e<`=;-N?/l6"VZb+$lU-UUd.ON^/h\.j99D9"c<V>OGf1Rl>>^$cqT[gi)H+Cl\Vq_
gPTc>_FRSOgUNs$;;jbM5&,5o#HJ`A>tWIM@Fqn5i*c+,aI-O>eY3smG<*:&C,6'B6aR<eeYZNg
\"T8%`_iW,s#$a#bZa%8>QB9MJ8RF1.NR"NE90mjm6<344@el;N2KKdbXr!GN"'ERp^f\hjrS)(
iG_E4!<cJB9oLRkaP/d[4`/`723g(.79u`1fjK#RgZZUo8Xs01+JF,sL(mLY>U;jB0JF[8D"<Rl
B3M3N#Qe:eC7:(+":m9^+$.XdOYqXJTkq'L8<^6?lAH4tPR`]]Wr]eTAf*0b$[mlsV\e3!h4DIR
IpqBfZ^Z2O9<(m%325P.%%L3l>?-Z!#`dL#;h]:P+T"a]@iY+cSql4=9/_;"f"U@,7(FGsDrgic
e>(,[`1O8tp-]l]f&$4s^Ek].%43N%-7L3BamF#rQ^1X?b)O8^8.Pa2f$mOY6M5`Um'_mX(q>X-
5Z_*Peulen;Aj"&\9#<<)`*S=O-BfFMB#W6@Bg0-OPZ_4.CL\*'b#t?H%&eDhUq!-Y2D6'(?//:
Q)h[Vd:)/6d/T9koWU@uZK]t\(b]TM7Xbbt@='&*nC-L2IiNWGdiH<Z6G'V8U_WF3g0346Cd5ZX
0gVCN>^/52\eAq6jHZo81&Ka>A)FM`];)47pDW](O2\&/eusd]=_I!]+5+!hd<BhVLB.b6W&L._
RN?,C+4dA/(nRK5!-HiS\lT8D8.m&UEu%YG><!n5R/=;EV*Q3?\T\%";cOfT@e;K/i.Gc548K2X
hZC<6mQ@E+741g'7XBWPebp3*B@uta*=onB`G#H$Png5;_$gFp;"Q+Dm3F,9FaFi#;IH].7<Sf0
e`i)%8Ji$3bN_kG83eT^OOqTmm_=\C>rh:45:G:h0ZstEN>e@r7%U<?+;c0s(b`^qMt\9?FR_o7
d"gRs/Et2_Qpn3qiOku2.?ZhB#,Ur_VFsZ'#:aUVI"Q50<7d>cT/1l%oaj0CNg,@<7ukd$Ta40l
?`qH-g&5]R)AA3&GSRF]dGUuCkQ^=6]&&.U'(B-(37Z4KM2CVsY>1B;1j$.%mrW>t:=:\,b]W3>
&8Z9!DBDXAg:oRQFu39fRr$0Er&ouuq).u<Ma#X*,(8LpjTZ;tD*>H@n`SOH]VrSZr&YEqg53.*
C:l+d*F/HFgWQJ#kTJa'#=+<6<k5?Z*[GgJC2smph&7.HeLgVK93>FsU+i"A,\f?&UEZVuN-sA'
=VaVbnW/j*h1*p32C1?=f@5jVUROcn[TX!@2CRFF=,.]VB4.[m?<:jA[%`in=(NsEKgsmHh#h!X
&=Q!Mk&s`h,f[B+]E.&&dmXDS),Os6Db_OIhaR:0D7@'q-A=>P45Mj`cpV6-,,\;bSEW.ndbmD_
k0a.,T0=(h3qS%hB)Q-Bmpe%UMkBU\-@2.N&=i+2fIeG+!:A:8UJ8KurA]SSNc%4S"F`r@q#(;o
q>63[n2)h'`L8p,_,A"kfAtI^<ef/_\D<5jS3%&(G*>,D_!#FC6$06SalkNJKCQP"4ljG;IggSo
j*M30s+2JDj*scS8'.!ce)IC-6i;r\_c$k<Ue\P>QPH&1m&i'&d$G;R&4e2,,+bm/5UpV$nFj5u
olpku-,O#!$?rhjAd7cVS&\X2EZd@":aZS4MO<X8?68>M`+h5m=.QQD)pf-<7faSrp05]kjd'q&
3T%!GRZJEPod5Zk=G\>ADR).3-1qmRNT5Y;]'k)kF/$_#G?6_*Qu]LE8W&Be;H[@]<61_6WAMhf
iZCRDK//?U,;DTQnoG50(I>D,2T'E@mSqB3YB!YuD:S)O0fqrZ5]J8rPaT(Ied\@R2%F^GdbckW
LD1rg%L"YO>*t\C:U-M:i$dL#DIN5pQdtNYcarC6PD#a_B1$sKP-L/4#4WI?4W8lr#U#&]@C(*b
O#ILkGd]2f8SS`##IW8&+.rdT&6#EA68p'j!PRLqbnC@X2p9'l,_OeE%#/F?,:%Da>YC)Gh2Fhu
pc-%sd]S'2SWFd2-RbAuGK6Cf,ZTOg_>DGkQVbo-G"OsIM`C\OCBR_E8!kSY$<Q'crn+7DYjfhc
kN1ddAkP2VHMY36HhqcpEdT;\02Jm$Dr0P[q-cb$:Z[uZ0]Jk6iOiH$;Y$GA3+)Fd9[u!>d)G9p
Na9uafZ"oNU/XR-B(SA$!JnriKJc$WT0IQMq,72lF:!pc%1caXHl>A*(IO]2L0l/u"m*;-R<&db
M23Q?AGuAcJ&c7_o,M@,rL_g>W8TAh=o=MDcS?!OXtYkC3,@f[X"DT)VJ;uo>3hD#Kg(gJ1),u<
Q$QGUWXnhF2qV54l9H..rI^.cci^lX*XdJhPYFg@Eh9ih4[uP<LA8^&`>e?U^O/!2!'T?ArV_Li
`#^BjOY/UB<h<9,CGc?Vrb]1F2M*a60cN"k%Ge6`89U).NeUm&Z\inc[%E]8q^q\K+V4I\0"64J
n`L-9n4O#l6QE?8cR1i\E8:j69`2YQ+&eNH)UEdV3)2@CFpM69$h6):b<thU]iHf2:KM0O\2ie;
?9$bc]sUMcjQWc761E4`eru(W1oB^>4G^OTZ0=u)3=iHIfULmWi./;T;'="0eS"!$Ab$K_"W_=$
*)5ma[OL[:J7JqeY)5H9rsMeh=1Hl2a0[YanD1oFK6tm-kA\at\)e%0J-HJ#)Gf3-R>3?-"*#WS
d@EpIH4Q1pTtKkFnkM#m/e8HKDLb+8#Ms[PXYR7"mES8[UkJ_f%it,TYo[fOJgUqQm>D`CBjS06
UAc+PK_O[~>
endstream
endobj
11 0 obj
<</Type/FontDescriptor/FontName/ZRKBEE+Helvetica-Bold/FontBBox[0 -23 522 724]/Flags 65568
/Ascent 724
/CapHeight 724
/Descent -23
/ItalicAngle 0
/StemV 78
/MissingWidth 500
/CharSet(/four/one/slash/three/two)/FontFile3 126 0 R>>
endobj
126 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 767>>stream
Gaqcp>t@n&(rtOo4D1R7h#-@]WLL(WV(U$g5qVUN'f26*#:1O]RlbJbc9?2g\;Ro%Ut?PjKV]Kq
TokFCjMZt6/ei5]4t,Us\qm!\_<rM=GJ"-N"VKQQ4T(f.oC2YqPb3^JL,!gD8jj$06dE::JE"kJ
>#NY-MEGA!WF:t4H<E%Egt=)P"e@.(c]cU_8/+AF"J^ZAa"X9FWK'4t3\5Wj@9e6WA7(>H])NkW
g$NtLMZ01):+7H8r-5Er6mO&ioL]%$/+1c#7?NA07u7G`+ma<_-$O7oN)Piki@\8qK>BeU=*N0P
`eF\%SQ8p?AY3``KMOW,+md"Tn,FU<+ngGgZ)JV76<&n9cjh<F:(*'P;)rAYe''H,"M&E'KijcE
GBQ6IY$VP5M??p\@?"eteaPP+*K62L\.o+94^5*33S6MdN@J;=cP]PIU;/M,:_)YFP>"<*86<?i
b\[-r#;CRQYbl=/@'9AnCZrKuAm.9i?:eJ35hR.OETtmBB:6T][UFkJ:n<:Ip'Zn][$2pM:-0I#
J_UI<(k)O`gAmS+]ETIj&YH"cM7XF^a6pRh5/-4X5jpF'k3Y#6Xl,@apI6Co;0fBprsG&fT!d/2
b*(((=6:U=-j)icHYP`l1se0l$$aMe<<jV$SbcmZ7dB-[oYP'P7HN,;jl;mac_8K@pEr+kJS3nT
/lrDJM+:)q[<$G)X,EeY=J@^h@!efL(P*B:%gP8%c5OTAA17t)l2E[Q$jNZa%YdP@J>ug?!CFO%
MsLOO~>
endstream
endobj
128 0 obj
<</Type/Metadata
/Subtype/XML/Length 1420>>stream
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:42bb50db-9408-11f4-0000-5c5b1adbcd3e' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.07'/>
<rdf:Description rdf:about='uuid:42bb50db-9408-11f4-0000-5c5b1adbcd3e' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2019-04-10T16:52:34-07:00</xmp:ModifyDate>
<xmp:CreateDate>2019-04-10T16:52:34-07:00</xmp:CreateDate>
<xmp:CreatorTool>GNU Enscript 1.6.6</xmp:CreatorTool></rdf:Description>
<rdf:Description rdf:about='uuid:42bb50db-9408-11f4-0000-5c5b1adbcd3e' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:42bb50db-9408-11f4-0000-5c5b1adbcd3e'/>
<rdf:Description rdf:about='uuid:42bb50db-9408-11f4-0000-5c5b1adbcd3e' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Listing.ps</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>Wesley Mackey</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                        
                                                                        
<?xpacket end='w'?>
endstream
endobj
2 0 obj
<</Producer(GPL Ghostscript 9.07)
/CreationDate(D:20190410165234-07'00')
/ModDate(D:20190410165234-07'00')
/Title(Listing.ps)
/Author(Wesley Mackey)
/Creator(GNU Enscript 1.6.6)>>endobj
xref
0 129
0000000000 65535 f 
0000053020 00000 n 
0000076667 00000 n 
0000052809 00000 n 
0000049427 00000 n 
0000000009 00000 n 
0000002942 00000 n 
0000053086 00000 n 
0000055817 00000 n 
0000067560 00000 n 
0000056405 00000 n 
0000074055 00000 n 
0000056012 00000 n 
0000069200 00000 n 
0000055183 00000 n 
0000056586 00000 n 
0000053127 00000 n 
0000053157 00000 n 
0000049578 00000 n 
0000002962 00000 n 
0000005967 00000 n 
0000053220 00000 n 
0000053250 00000 n 
0000049731 00000 n 
0000005988 00000 n 
0000008356 00000 n 
0000053313 00000 n 
0000053343 00000 n 
0000049884 00000 n 
0000008377 00000 n 
0000010339 00000 n 
0000053406 00000 n 
0000053436 00000 n 
0000050037 00000 n 
0000010360 00000 n 
0000012486 00000 n 
0000053499 00000 n 
0000053529 00000 n 
0000050190 00000 n 
0000012507 00000 n 
0000014537 00000 n 
0000053592 00000 n 
0000053622 00000 n 
0000050343 00000 n 
0000014558 00000 n 
0000016089 00000 n 
0000053685 00000 n 
0000053715 00000 n 
0000050496 00000 n 
0000016110 00000 n 
0000018678 00000 n 
0000053778 00000 n 
0000053808 00000 n 
0000050649 00000 n 
0000018699 00000 n 
0000020544 00000 n 
0000053871 00000 n 
0000053901 00000 n 
0000050802 00000 n 
0000020565 00000 n 
0000024156 00000 n 
0000053964 00000 n 
0000053994 00000 n 
0000050955 00000 n 
0000024177 00000 n 
0000027073 00000 n 
0000054057 00000 n 
0000054087 00000 n 
0000051108 00000 n 
0000027094 00000 n 
0000028823 00000 n 
0000054150 00000 n 
0000054180 00000 n 
0000051261 00000 n 
0000028844 00000 n 
0000030504 00000 n 
0000054243 00000 n 
0000054273 00000 n 
0000051414 00000 n 
0000030525 00000 n 
0000033273 00000 n 
0000054336 00000 n 
0000054366 00000 n 
0000051567 00000 n 
0000033294 00000 n 
0000035825 00000 n 
0000054429 00000 n 
0000054459 00000 n 
0000051720 00000 n 
0000035846 00000 n 
0000037923 00000 n 
0000054522 00000 n 
0000054552 00000 n 
0000051873 00000 n 
0000037944 00000 n 
0000039531 00000 n 
0000054615 00000 n 
0000054645 00000 n 
0000052026 00000 n 
0000039552 00000 n 
0000041599 00000 n 
0000054708 00000 n 
0000054739 00000 n 
0000052181 00000 n 
0000041621 00000 n 
0000044518 00000 n 
0000054803 00000 n 
0000054834 00000 n 
0000052338 00000 n 
0000044540 00000 n 
0000047212 00000 n 
0000054898 00000 n 
0000054929 00000 n 
0000052495 00000 n 
0000047234 00000 n 
0000048386 00000 n 
0000054993 00000 n 
0000055024 00000 n 
0000052652 00000 n 
0000048408 00000 n 
0000049406 00000 n 
0000055088 00000 n 
0000055119 00000 n 
0000057255 00000 n 
0000067821 00000 n 
0000069533 00000 n 
0000074300 00000 n 
0000055701 00000 n 
0000075169 00000 n 
trailer
<< /Size 129 /Root 1 0 R /Info 2 0 R
/ID [<20678996A0D12D69B463A0BD09A2450A><20678996A0D12D69B463A0BD09A2450A>]
>>
startxref
76861
%%EOF
