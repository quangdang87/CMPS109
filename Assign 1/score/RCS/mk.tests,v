head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2018.06.20.20.08.48;	author -;	state -;
branches;
next	1.2;

1.2
date	2018.06.19.21.02.29;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.07.01.01.24.52;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@#!/bin/sh
# $Id: mk.tests,v 1.2 2018-06-19 14:02:29-07 - - $
#
# This program just runs ydc from input to output.
# It, like dc, does not bother with exit status or stdout/stderr.
#
# Note: all files *.out.diffs should be empty of your program works.
#
export PATH=$PATH:/afs/cats.ucsc.edu/courses/cmps012b-wm/bin
ulimit -f 32
ulimit -t 120

PROG=./ydc
GRIND="valgrind --leak-check=full --show-reachable=yes"

for test in test[0-9]-*.ydc
do
   $PROG <$test 1>$test.ydc.out 2>$test.ydc.err
   echo status = $? >$test.status
   diff $test.ydc.out $test.dc.out >$test.out.diffs
done

echo If any of the "*.out.diffs" have data,
echo then ydc did not produce correct output.
ls -la *.out.diffs

$GRIND $PROG <testx-leaks.ydc 1>leaks-test.out 2>leaks-test.err

@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: mk.tests,v 1.1 2015-06-30 18:24:52-07 - - $
a19 1
   /usr/bin/dc <$test >$test.dc.out
d22 4
@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id: mk.tests,v 1.4 2014-06-26 17:24:49-07 - - $
d7 2
d18 1
a18 1
   $PROG <$test 1>$test.out 2>$test.err
d20 2
@
